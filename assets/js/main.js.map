{"version":3,"sources":["tiny-slider.helper.ie8.js","tiny-slider.js","index.js"],"names":["Array","prototype","forEach","block","thisObject","len","this","length","i","call","map","fun","TypeError","res","thisp","arguments","indexOf","value","Object","hasOwnProperty","Element","addEventListener","type","listener","wrapper","e","target","srcElement","currentTarget","self","handleEvent","wrapper2","document","readyState","attachEvent","eventListeners","push","object","Event","window","removeEventListener","counter","eventListener","detachEvent","splice","HTMLDocument","Window","documentElement","defineProperty","get","n","nodes","children","l","nodeType","previousSibling","nextSibling","getComputedStyle","el","style","currentStyle","box","getBoundingClientRect","output","createElement","cssFloat","styleFloat","width","right","left","height","bottom","top","tns","win","raf","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","win$1","caf","cancelAnimationFrame","mozCancelAnimationFrame","id","clearTimeout","extend","obj","name","copy","undefined","checkStorageValue","JSON","parse","setLocalStorage","storage","key","access","setItem","getBody","doc","body","fake","docElement","setFakeBody","docOverflow","overflow","background","appendChild","resetFakeBody","remove","offsetHeight","addCSSRule","sheet","selector","rules","index","insertRule","addRule","getCssRulesLength","cssRules","arr","callback","scope","classListSupport","hasClass","str","classList","contains","className","addClass","add","removeClass","replace","hasAttr","attr","hasAttribute","getAttr","getAttribute","isNodeList","item","setAttrs","els","attrs","toString","setAttribute","removeAttrs","attrLength","j","removeAttribute","arrayFromNodeList","nl","hideElement","forceHide","display","showElement","isVisible","whichProperty","props","Props","charAt","toUpperCase","substr","prefix","prop","getEndProperty","propIn","propOut","endProp","test","toLowerCase","supportsPassive","opts","passiveOption","passive","addEvents","preventScrolling","option","removeEvents","Events","topics","on","eventName","fn","off","emit","data","keys","parentNode","removeChild","options","container","mode","axis","items","gutter","edgePadding","fixedWidth","autoWidth","viewportMax","slideBy","center","controls","controlsPosition","controlsText","controlsContainer","prevButton","nextButton","nav","navPosition","navContainer","navAsThumbnails","arrowKeys","speed","autoplay","autoplayPosition","autoplayTimeout","autoplayDirection","autoplayText","autoplayHoverPause","autoplayButton","autoplayButtonOutput","autoplayResetOnVisibility","animateIn","animateOut","animateNormal","animateDelay","loop","rewind","autoHeight","responsive","lazyload","lazyloadSelector","touch","mouseDrag","swipeAngle","nested","preventActionWhenRunning","preventScrollOnTouch","freezable","onInit","useLocalStorage","KEYS","ENTER","SPACE","LEFT","RIGHT","tnsStorage","localStorageAccess","browserInfo","navigator","userAgent","uid","Date","localStorage","getItem","removeItem","position","div","rule","CALC","result","val","vals","offsetWidth","calc","PERCENTAGELAYOUT","supported","outer","innerHTML","Math","abs","count","percentageLayout","CSSMQ","styleSheet","cssText","createTextNode","TRANSFORM","HAS3DTRANSFORMS","tf","has3d","cssTF","slice","insertBefore","getPropertyValue","has3DTransforms","TRANSITIONDURATION","TRANSITIONDELAY","ANIMATIONDURATION","ANIMATIONDELAY","TRANSITIONEND","ANIMATIONEND","supportConsoleWarn","console","warn","tnsList","optionsElements","querySelector","nodeName","carousel","responsiveTem","updateOptions","middleWrapper","breakpointZone","horizontal","outerWrapper","innerWrapper","containerParent","containerHTML","outerHTML","slideItems","slideCount","windowWidth","getWindowWidth","isOn","setBreakpointZone","slidePositions","imgsComplete","liveregionCurrent","itemsMax","media","getOption","viewport","getViewportWidth","floor","fixedWidthViewportWidth","slideItemsOut","cloneCount","bp","tem","ceil","min","apply","max","getItemsMax","hasOption","slideCountNew","hasRightDeadZone","rightBoundary","getRightBoundary","updateIndexBeforeTransform","transformAttr","transformPrefix","transformPostfix","getIndexMax","getStartIndex","indexCached","indexMin","getCurrentSlide","indexMax","moveDirectionExpected","running","events","newContainerClasses","slideId","tnsId","disable","disabled","freeze","getFreeze","frozen","controlsEvents","click","onControlsClick","keydown","getEvent","keyIndex","keyCode","navEvents","onTransitionEnd","getTarget","navIndex","navClicked","Number","targetIndexBase","pages","goTo","navCurrentIndex","animating","stopAutoplay","curElement","activeElement","setFocus","navItems","hoverEvents","mouseover","stopAutoplayTimer","autoplayHoverPaused","mouseout","setAutoplayTimer","visibilityEvent","visibilitychange","hidden","autoplayVisibilityPaused","docmentKeydownEvent","touchEvents","touchstart","onPanStart","touchmove","onPanMove","touchend","onPanEnd","touchcancel","dragEvents","mousedown","mousemove","mouseup","mouseleave","hasControls","hasNav","hasAutoplay","hasTouch","hasMouseDrag","slideActiveClass","imgCompleteClass","imgEvents","load","imgLoaded","error","img","imgCompleted","imgFailed","preventScroll","prevIsButton","nextIsButton","controlsContainerHTML","prevButtonHTML","nextButtonHTML","navContainerHTML","getPages","pagesCached","getCurrentNavIndex","navCurrentIndexCached","navActiveClass","navStr","navStrCurrent","autoplayTimer","autoplayUserPaused","autoplayButtonHTML","autoplayHtmlStrings","translateInit","rafIndex","initPosition","lastPosition","panStart","getDist","a","b","x","y","resetVariblesWhenDisable","aria-hidden","tabindex","fragmentBefore","createDocumentFragment","fragmentAfter","num","cloneFirst","cloneNode","firstChild","cloneLast","initStructure","fontSize","slide","marginLeft","getTransitionDurationStyle","getInnerWrapperStyles","getContainerWidth","getSlideWidthStyle","getSlideGutterStyle","getAnimationDurationStyle","parseInt","middleWrapperStr","innerWrapperStr","containerStr","slideStr","itemsBP","fixedWidthBP","speedBP","edgePaddingBP","autoHeightBP","gutterBP","initSheet","initSliderTransform","updateIndex","leftEdge","rightEdge","transformCore","element","postfix","to","duration","tick","unit","from","positionTick","resetDuration","doContainerTransform","getContainerTransformValue","moveElement","updateContentWrapperHeight","eve","animateSlide","version","getInfo","info","play","startAutoplay","pause","updateSliderHeight","updateInnerWrapperHeight","refresh","destroy","ownerNode","resize","onResize","toggleAutoplay","clearInterval","htmlList","prevEl","previousElementSibling","parentEl","nextElementSibling","firstElementChild","rebuild","condition","ind","getAbsIndex","absIndex","innerWidth","clientWidth","getInsertPosition","pos","gap","getClientWidth","rect","ww","edgePaddingTem","gutterTem","fixedWidthTem","speedTem","gutterTemUnit","itemsTem","dividend","getCSSPrefix","substring","imgs","querySelectorAll","src","imgsLoadedCheck","getImageArray","initSliderTransformStyleCheck","doContainerTransformSilent","initTools","initEvents","stylesApplicationCheck","initSliderTransformCore","setSlidePositions","updateSlideStatus","insertAdjacentHTML","getLiveRegionStr","txt","data-action","aria-label","data-nav","aria-controls","navHtml","hiddenStr","updateNavVisibility","data-controls","isButton","updateControlsStatus","disableUI","resizeTasks","doAutoHeight","doLazyLoad","disableSlider","freezeSlider","additionalUpdates","bpChanged","breakpointZoneTem","needContainerTransform","indChanged","itemsChanged","disableTem","freezeTem","arrowKeysTem","controlsTem","navTem","touchTem","mouseDragTem","autoplayTem","autoplayHoverPauseTem","autoplayResetOnVisibilityTem","indexTem","autoHeightTem","controlsTextTem","centerTem","autoplayTextTem","classN","enableUI","margin","unfreezeSlider","html","updateLiveRegion","updateGallerySlidePositions","deleteRule","removeRule","vp","getVisibleSlideRange","start","end","rangestart","rangeend","parseFloat","point","cell","arg","stopPropagation","srcset","imgSelector","complete","navPrev","navCurrent","updateNavStatus","getMaxSlideHeight","slideStart","slideRange","heights","maxHeight","wp","attr2","base","range","getLowerCaseNodeName","isAriaDisabled","disEnableElement","prevDisabled","nextDisabled","disablePrev","disableNext","getCenterGap","denominator","number","classOut","classIn","isOut","render","sliderMoved","strTrans","event","propertyName","targetIndex","indexGap","isNaN","factor","dir","passEventObject","targetIn","setInterval","updateAutoplayButton","action","focus","isTouchEvent","changedTouches","preventDefaultBehavior","preventDefault","returnValue","getMoveDirectionExpected","angle","atan2","PI","direction","$","clientX","clientY","panUpdate","err","dist","percentageX","cancelable","preventClick","indexMoved","moved","rough","displayIndex","adjustTestimonialsHeight","testimonials","currentHeight","clientHeight","slider","0","670","980","menuToggle","getElementById","navContent"],"mappings":"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","file":"main.js","sourcesContent":["// forEach\n\nif (!Array.prototype.forEach) {\n  Array.prototype.forEach =  function(block, thisObject) {\n    var len = this.length >>> 0;\n    for (var i = 0; i < len; i++) {\n      if (i in this) {\n        block.call(thisObject, this[i], i, this);\n      }\n    }\n  };\n}\n\n// map\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\nif (!Array.prototype.map) {\n    Array.prototype.map = function(fun /*, thisp*/) {\n        var len = this.length >>> 0;\n        if (typeof fun != \"function\")\n          throw new TypeError();\n\n        var res = new Array(len);\n        var thisp = arguments[1];\n        for (var i = 0; i < len; i++) {\n            if (i in this)\n                res[i] = fun.call(thisp, this[i], i, this);\n        }\n\n        return res;\n    };\n}\n\n// indexOf\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (value /*, fromIndex */ ) {\n        var length = this.length;\n        if (!length)\n            return -1;\n        var i = arguments[1] || 0;\n        if (i >= length)\n            return -1;\n        if (i < 0)\n            i += length;\n        for (; i < length; i++) {\n            if (!Object.prototype.hasOwnProperty.call(this, i))\n                continue;\n            if (value === this[i])\n                return i;\n        }\n        return -1;\n    };\n}\n\n// addEventListener\n// removeEventListener\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener?redirectlocale=en-US&redirectslug=DOM%2FEventTarget.addEventListener#Compatibility\n\n(function() {\n  if (!Element.prototype.addEventListener) {\n    var eventListeners=[];\n    \n    var addEventListener=function(type,listener /*, useCapture (will be ignored) */) {\n      var self=this;\n      var wrapper=function(e) {\n        e.target=e.srcElement;\n        e.currentTarget=self;\n        if (typeof listener.handleEvent != \"undefined\") {\n          listener.handleEvent(e);\n        } else {\n          listener.call(self,e);\n        }\n      };\n      if (type==\"DOMContentLoaded\") {\n        var wrapper2=function(e) {\n          if (document.readyState==\"complete\") {\n            wrapper(e);\n          }\n        };\n        document.attachEvent(\"onreadystatechange\",wrapper2);\n        eventListeners.push({object:this,type:type,listener:listener,wrapper:wrapper2});\n        \n        if (document.readyState==\"complete\") {\n          var e=new Event();\n          e.srcElement=window;\n          wrapper2(e);\n        }\n      } else {\n        this.attachEvent(\"on\"+type,wrapper);\n        eventListeners.push({object:this,type:type,listener:listener,wrapper:wrapper});\n      }\n    };\n    var removeEventListener=function(type,listener /*, useCapture (will be ignored) */) {\n      var counter=0;\n      while (counter<eventListeners.length) {\n        var eventListener=eventListeners[counter];\n        if (eventListener.object==this && eventListener.type==type && eventListener.listener==listener) {\n          if (type==\"DOMContentLoaded\") {\n            this.detachEvent(\"onreadystatechange\",eventListener.wrapper);\n          } else {\n            this.detachEvent(\"on\"+type,eventListener.wrapper);\n          }\n          eventListeners.splice(counter, 1);\n          break;\n        }\n        ++counter;\n      }\n    };\n    Element.prototype.addEventListener=addEventListener;\n    Element.prototype.removeEventListener=removeEventListener;\n    if (HTMLDocument) {\n      HTMLDocument.prototype.addEventListener=addEventListener;\n      HTMLDocument.prototype.removeEventListener=removeEventListener;\n    }\n    if (Window) {\n      Window.prototype.addEventListener=addEventListener;\n      Window.prototype.removeEventListener=removeEventListener;\n    }\n  }\n})();\n\n// Element.firstElementChild\n\n(function () {\n\n  if (!(\"firstElementChild\" in document.documentElement)) {\n    Object.defineProperty(Element.prototype, \"firstElementChild\", {\n      get: function(){\n        for(var nodes = this.children, n, i = 0, l = nodes.length; i < l; ++i) {\n          if(n = nodes[i], 1 === n.nodeType) { return n; }\n        }\n        return null;\n      }\n    });\n  }\n})();\n\n// Element.previousElementSibling\n\n(function () {\n\n  if (!(\"previousElementSibling\" in document.documentElement)) {\n    Object.defineProperty(Element.prototype, \"previousElementSibling\", {\n      get: function(){\n        var e = this.previousSibling;\n        while(e && 1 !== e.nodeType) {\n          e = e.previousSibling;\n        }\n        return e;\n      }\n    });\n  }\n})();\n\n// Element.nextElementSibling\n\n(function () {\n\n  if (!(\"nextElementSibling\" in document.documentElement)) {\n    Object.defineProperty(Element.prototype, \"nextElementSibling\", {\n      get: function(){\n        var e = this.nextSibling;\n        while(e && 1 !== e.nodeType) {\n          e = e.nextSibling;\n        }\n        return e;\n      }\n    });\n  }\n})();\n\n// getComputedStyle\n\n(function(){\n  \n  if(!window.getComputedStyle){\n    window.getComputedStyle = function(el){\n      if(!el) { return null; }\n      \n      /**\n       * currentStyle returns an instance of a non-standard class called \"CSSCurrentStyleDeclaration\"\n       * instead of \"CSSStyleDeclaration\", which has a few methods and properties missing (such as cssText).\n       * https://msdn.microsoft.com/en-us/library/cc848941(v=vs.85).aspx\n       *\n       * Instead of returning the currentStyle value directly, we'll copy its properties to the style\n       * of a shadow element. This ensures cssText is included, and ensures the result is an instance of\n       * the correct DOM interface.\n       *\n       * There'll still be some minor discrepancies in the style values. For example, IE preserves the way\n       * colour values were authored, whereas standards-compliant browsers will expand colours to use \"rgb()\"\n       * notation. We won't bother to fix things like these, as they'd involve too much fiddling for little\n       * gain.\n       */\n      \n      var style   = el.currentStyle;\n      var box     = el.getBoundingClientRect();\n      var shadow  = document.createElement(\"div\");\n      var output  = shadow.style;\n      for(var i in style) {\n        output[i] = style[i];\n      }\n      \n      /** Fix some glitches */\n      output.cssFloat = output.styleFloat;\n      if(\"auto\" === output.width) { output.width  = (box.right - box.left) + \"px\"; }\n      if(\"auto\" === output.height) { output.height = (box.bottom - box.top) + \"px\"; }\n      return output;\n    };\n  } \n})();\n\n// import \"./ie8/isArray.js\";\n","var tns = (function (){\nvar win = window;\n\nvar raf = win.requestAnimationFrame\n  || win.webkitRequestAnimationFrame\n  || win.mozRequestAnimationFrame\n  || win.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16); };\n\nvar win$1 = window;\n\nvar caf = win$1.cancelAnimationFrame\n  || win$1.mozCancelAnimationFrame\n  || function(id){ clearTimeout(id); };\n\nfunction extend() {\n  var obj, name, copy,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length;\n\n  for (; i < length; i++) {\n    if ((obj = arguments[i]) !== null) {\n      for (name in obj) {\n        copy = obj[name];\n\n        if (target === copy) {\n          continue;\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n  return target;\n}\n\nfunction checkStorageValue (value) {\n  return ['true', 'false'].indexOf(value) >= 0 ? JSON.parse(value) : value;\n}\n\nfunction setLocalStorage(storage, key, value, access) {\n  if (access) {\n    try { storage.setItem(key, value); } catch (e) {}\n  }\n  return value;\n}\n\nfunction getSlideId() {\n  var id = window.tnsId;\n  window.tnsId = !id ? 1 : id + 1;\n  \n  return 'tns' + window.tnsId;\n}\n\nfunction getBody () {\n  var doc = document,\n      body = doc.body;\n\n  if (!body) {\n    body = doc.createElement('body');\n    body.fake = true;\n  }\n\n  return body;\n}\n\nvar docElement = document.documentElement;\n\nfunction setFakeBody (body) {\n  var docOverflow = '';\n  if (body.fake) {\n    docOverflow = docElement.style.overflow;\n    //avoid crashing IE8, if background image is used\n    body.style.background = '';\n    //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n    body.style.overflow = docElement.style.overflow = 'hidden';\n    docElement.appendChild(body);\n  }\n\n  return docOverflow;\n}\n\nfunction resetFakeBody (body, docOverflow) {\n  if (body.fake) {\n    body.remove();\n    docElement.style.overflow = docOverflow;\n    // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n    // eslint-disable-next-line\n    docElement.offsetHeight;\n  }\n}\n\n// get css-calc \n\nfunction calc() {\n  var doc = document, \n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      div = doc.createElement('div'), \n      result = false;\n\n  body.appendChild(div);\n  try {\n    var str = '(10px * 10)',\n        vals = ['calc' + str, '-moz-calc' + str, '-webkit-calc' + str],\n        val;\n    for (var i = 0; i < 3; i++) {\n      val = vals[i];\n      div.style.width = val;\n      if (div.offsetWidth === 100) { \n        result = val.replace(str, ''); \n        break;\n      }\n    }\n  } catch (e) {}\n  \n  body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n\n  return result;\n}\n\n// get subpixel support value\n\nfunction percentageLayout() {\n  // check subpixel layout supporting\n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      wrapper = doc.createElement('div'),\n      outer = doc.createElement('div'),\n      str = '',\n      count = 70,\n      perPage = 3,\n      supported = false;\n\n  wrapper.className = \"tns-t-subp2\";\n  outer.className = \"tns-t-ct\";\n\n  for (var i = 0; i < count; i++) {\n    str += '<div></div>';\n  }\n\n  outer.innerHTML = str;\n  wrapper.appendChild(outer);\n  body.appendChild(wrapper);\n\n  supported = Math.abs(wrapper.getBoundingClientRect().left - outer.children[count - perPage].getBoundingClientRect().left) < 2;\n\n  body.fake ? resetFakeBody(body, docOverflow) : wrapper.remove();\n\n  return supported;\n}\n\nfunction mediaquerySupport () {\n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      div = doc.createElement('div'),\n      style = doc.createElement('style'),\n      rule = '@media all and (min-width:1px){.tns-mq-test{position:absolute}}',\n      position;\n\n  style.type = 'text/css';\n  div.className = 'tns-mq-test';\n\n  body.appendChild(style);\n  body.appendChild(div);\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = rule;\n  } else {\n    style.appendChild(doc.createTextNode(rule));\n  }\n\n  position = window.getComputedStyle ? window.getComputedStyle(div).position : div.currentStyle['position'];\n\n  body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n\n  return position === \"absolute\";\n}\n\n// create and append style sheet\nfunction createStyleSheet (media) {\n  // Create the <style> tag\n  var style = document.createElement(\"style\");\n  // style.setAttribute(\"type\", \"text/css\");\n\n  // Add a media (and/or media query) here if you'd like!\n  // style.setAttribute(\"media\", \"screen\")\n  // style.setAttribute(\"media\", \"only screen and (max-width : 1024px)\")\n  if (media) { style.setAttribute(\"media\", media); }\n\n  // WebKit hack :(\n  // style.appendChild(document.createTextNode(\"\"));\n\n  // Add the <style> element to the page\n  document.querySelector('head').appendChild(style);\n\n  return style.sheet ? style.sheet : style.styleSheet;\n}\n\n// cross browsers addRule method\nfunction addCSSRule(sheet, selector, rules, index) {\n  // return raf(function() {\n    'insertRule' in sheet ?\n      sheet.insertRule(selector + '{' + rules + '}', index) :\n      sheet.addRule(selector, rules, index);\n  // });\n}\n\n// cross browsers addRule method\nfunction removeCSSRule(sheet, index) {\n  // return raf(function() {\n    'deleteRule' in sheet ?\n      sheet.deleteRule(index) :\n      sheet.removeRule(index);\n  // });\n}\n\nfunction getCssRulesLength(sheet) {\n  var rule = ('insertRule' in sheet) ? sheet.cssRules : sheet.rules;\n  return rule.length;\n}\n\nfunction toDegree (y, x) {\n  return Math.atan2(y, x) * (180 / Math.PI);\n}\n\nfunction getTouchDirection(angle, range) {\n  var direction = false,\n      gap = Math.abs(90 - Math.abs(angle));\n      \n  if (gap >= 90 - range) {\n    direction = 'horizontal';\n  } else if (gap <= range) {\n    direction = 'vertical';\n  }\n\n  return direction;\n}\n\n// https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\nfunction forEach (arr, callback, scope) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    callback.call(scope, arr[i], i);\n  }\n}\n\nvar classListSupport = 'classList' in document.createElement('_');\n\nvar hasClass = classListSupport ?\n    function (el, str) { return el.classList.contains(str); } :\n    function (el, str) { return el.className.indexOf(str) >= 0; };\n\nvar addClass = classListSupport ?\n    function (el, str) {\n      if (!hasClass(el,  str)) { el.classList.add(str); }\n    } :\n    function (el, str) {\n      if (!hasClass(el,  str)) { el.className += ' ' + str; }\n    };\n\nvar removeClass = classListSupport ?\n    function (el, str) {\n      if (hasClass(el,  str)) { el.classList.remove(str); }\n    } :\n    function (el, str) {\n      if (hasClass(el, str)) { el.className = el.className.replace(str, ''); }\n    };\n\nfunction hasAttr(el, attr) {\n  return el.hasAttribute(attr);\n}\n\nfunction getAttr(el, attr) {\n  return el.getAttribute(attr);\n}\n\nfunction isNodeList(el) {\n  // Only NodeList has the \"item()\" function\n  return typeof el.item !== \"undefined\"; \n}\n\nfunction setAttrs(els, attrs) {\n  els = (isNodeList(els) || els instanceof Array) ? els : [els];\n  if (Object.prototype.toString.call(attrs) !== '[object Object]') { return; }\n\n  for (var i = els.length; i--;) {\n    for(var key in attrs) {\n      els[i].setAttribute(key, attrs[key]);\n    }\n  }\n}\n\nfunction removeAttrs(els, attrs) {\n  els = (isNodeList(els) || els instanceof Array) ? els : [els];\n  attrs = (attrs instanceof Array) ? attrs : [attrs];\n\n  var attrLength = attrs.length;\n  for (var i = els.length; i--;) {\n    for (var j = attrLength; j--;) {\n      els[i].removeAttribute(attrs[j]);\n    }\n  }\n}\n\nfunction arrayFromNodeList (nl) {\n  var arr = [];\n  for (var i = 0, l = nl.length; i < l; i++) {\n    arr.push(nl[i]);\n  }\n  return arr;\n}\n\nfunction hideElement(el, forceHide) {\n  if (el.style.display !== 'none') { el.style.display = 'none'; }\n}\n\nfunction showElement(el, forceHide) {\n  if (el.style.display === 'none') { el.style.display = ''; }\n}\n\nfunction isVisible(el) {\n  return window.getComputedStyle(el).display !== 'none';\n}\n\nfunction whichProperty(props){\n  if (typeof props === 'string') {\n    var arr = [props],\n        Props = props.charAt(0).toUpperCase() + props.substr(1),\n        prefixes = ['Webkit', 'Moz', 'ms', 'O'];\n        \n    prefixes.forEach(function(prefix) {\n      if (prefix !== 'ms' || props === 'transform') {\n        arr.push(prefix + Props);\n      }\n    });\n\n    props = arr;\n  }\n\n  var el = document.createElement('fakeelement'),\n      len = props.length;\n  for(var i = 0; i < props.length; i++){\n    var prop = props[i];\n    if( el.style[prop] !== undefined ){ return prop; }\n  }\n\n  return false; // explicit for ie9-\n}\n\nfunction has3DTransforms(tf){\n  if (!tf) { return false; }\n  if (!window.getComputedStyle) { return false; }\n  \n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      el = doc.createElement('p'),\n      has3d,\n      cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';\n\n  cssTF += 'transform';\n\n  // Add it to the body to get the computed style\n  body.insertBefore(el, null);\n\n  el.style[tf] = 'translate3d(1px,1px,1px)';\n  has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n\n  body.fake ? resetFakeBody(body, docOverflow) : el.remove();\n\n  return (has3d !== undefined && has3d.length > 0 && has3d !== \"none\");\n}\n\n// get transitionend, animationend based on transitionDuration\n// @propin: string\n// @propOut: string, first-letter uppercase\n// Usage: getEndProperty('WebkitTransitionDuration', 'Transition') => webkitTransitionEnd\nfunction getEndProperty(propIn, propOut) {\n  var endProp = false;\n  if (/^Webkit/.test(propIn)) {\n    endProp = 'webkit' + propOut + 'End';\n  } else if (/^O/.test(propIn)) {\n    endProp = 'o' + propOut + 'End';\n  } else if (propIn) {\n    endProp = propOut.toLowerCase() + 'end';\n  }\n  return endProp;\n}\n\n// Test via a getter in the options object to see if the passive property is accessed\nvar supportsPassive = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener(\"test\", null, opts);\n} catch (e) {}\nvar passiveOption = supportsPassive ? { passive: true } : false;\n\nfunction addEvents(el, obj, preventScrolling) {\n  for (var prop in obj) {\n    var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 && !preventScrolling ? passiveOption : false;\n    el.addEventListener(prop, obj[prop], option);\n  }\n}\n\nfunction removeEvents(el, obj) {\n  for (var prop in obj) {\n    var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 ? passiveOption : false;\n    el.removeEventListener(prop, obj[prop], option);\n  }\n}\n\nfunction Events() {\n  return {\n    topics: {},\n    on: function (eventName, fn) {\n      this.topics[eventName] = this.topics[eventName] || [];\n      this.topics[eventName].push(fn);\n    },\n    off: function(eventName, fn) {\n      if (this.topics[eventName]) {\n        for (var i = 0; i < this.topics[eventName].length; i++) {\n          if (this.topics[eventName][i] === fn) {\n            this.topics[eventName].splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    emit: function (eventName, data) {\n      data.type = eventName;\n      if (this.topics[eventName]) {\n        this.topics[eventName].forEach(function(fn) {\n          fn(data, eventName);\n        });\n      }\n    }\n  };\n}\n\nfunction jsTransform(element, attr, prefix, postfix, to, duration, callback) {\n  var tick = Math.min(duration, 10),\n      unit = (to.indexOf('%') >= 0) ? '%' : 'px',\n      to = to.replace(unit, ''),\n      from = Number(element.style[attr].replace(prefix, '').replace(postfix, '').replace(unit, '')),\n      positionTick = (to - from) / duration * tick,\n      running;\n\n  setTimeout(moveElement, tick);\n  function moveElement() {\n    duration -= tick;\n    from += positionTick;\n    element.style[attr] = prefix + from + unit + postfix;\n    if (duration > 0) { \n      setTimeout(moveElement, tick); \n    } else {\n      callback();\n    }\n  }\n}\n\n// Object.keys\nif (!Object.keys) {\n  Object.keys = function(object) {\n    var keys = [];\n    for (var name in object) {\n      if (Object.prototype.hasOwnProperty.call(object, name)) {\n        keys.push(name);\n      }\n    }\n    return keys;\n  };\n}\n\n// ChildNode.remove\nif(!(\"remove\" in Element.prototype)){\n  Element.prototype.remove = function(){\n    if(this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\nvar tns = function(options) {\n  options = extend({\n    container: '.slider',\n    mode: 'carousel',\n    axis: 'horizontal',\n    items: 1,\n    gutter: 0,\n    edgePadding: 0,\n    fixedWidth: false,\n    autoWidth: false,\n    viewportMax: false,\n    slideBy: 1,\n    center: false,\n    controls: true,\n    controlsPosition: 'top',\n    controlsText: ['prev', 'next'],\n    controlsContainer: false,\n    prevButton: false,\n    nextButton: false,\n    nav: true,\n    navPosition: 'top',\n    navContainer: false,\n    navAsThumbnails: false,\n    arrowKeys: false,\n    speed: 300,\n    autoplay: false,\n    autoplayPosition: 'top',\n    autoplayTimeout: 5000,\n    autoplayDirection: 'forward',\n    autoplayText: ['start', 'stop'],\n    autoplayHoverPause: false,\n    autoplayButton: false,\n    autoplayButtonOutput: true,\n    autoplayResetOnVisibility: true,\n    animateIn: 'tns-fadeIn',\n    animateOut: 'tns-fadeOut',\n    animateNormal: 'tns-normal',\n    animateDelay: false,\n    loop: true,\n    rewind: false,\n    autoHeight: false,\n    responsive: false,\n    lazyload: false,\n    lazyloadSelector: '.tns-lazy-img',\n    touch: true,\n    mouseDrag: false,\n    swipeAngle: 15,\n    nested: false,\n    preventActionWhenRunning: false,\n    preventScrollOnTouch: false,\n    freezable: true,\n    onInit: false,\n    useLocalStorage: true\n  }, options || {});\n\n  var doc = document,\n      win = window,\n      KEYS = {\n        ENTER: 13,\n        SPACE: 32,\n        LEFT: 37,\n        RIGHT: 39\n      },\n      tnsStorage = {},\n      localStorageAccess = options.useLocalStorage;\n\n  if (localStorageAccess) {\n    // check browser version and local storage access\n    var browserInfo = navigator.userAgent;\n    var uid = new Date;\n\n    try {\n      tnsStorage = win.localStorage;\n      if (tnsStorage) {\n        tnsStorage.setItem(uid, uid);\n        localStorageAccess = tnsStorage.getItem(uid) == uid;\n        tnsStorage.removeItem(uid);\n      } else {\n        localStorageAccess = false;\n      }\n      if (!localStorageAccess) { tnsStorage = {}; }\n    } catch(e) {\n      localStorageAccess = false;\n    }\n\n    if (localStorageAccess) {\n      // remove storage when browser version changes\n      if (tnsStorage['tnsApp'] && tnsStorage['tnsApp'] !== browserInfo) {\n        ['tC', 'tPL', 'tMQ', 'tTf', 't3D', 'tTDu', 'tTDe', 'tADu', 'tADe', 'tTE', 'tAE'].forEach(function(item) { tnsStorage.removeItem(item); });\n      }\n      // update browserInfo\n      localStorage['tnsApp'] = browserInfo;\n    }\n  }\n\n  var CALC = tnsStorage['tC'] ? checkStorageValue(tnsStorage['tC']) : setLocalStorage(tnsStorage, 'tC', calc(), localStorageAccess),\n      PERCENTAGELAYOUT = tnsStorage['tPL'] ? checkStorageValue(tnsStorage['tPL']) : setLocalStorage(tnsStorage, 'tPL', percentageLayout(), localStorageAccess),\n      CSSMQ = tnsStorage['tMQ'] ? checkStorageValue(tnsStorage['tMQ']) : setLocalStorage(tnsStorage, 'tMQ', mediaquerySupport(), localStorageAccess),\n      TRANSFORM = tnsStorage['tTf'] ? checkStorageValue(tnsStorage['tTf']) : setLocalStorage(tnsStorage, 'tTf', whichProperty('transform'), localStorageAccess),\n      HAS3DTRANSFORMS = tnsStorage['t3D'] ? checkStorageValue(tnsStorage['t3D']) : setLocalStorage(tnsStorage, 't3D', has3DTransforms(TRANSFORM), localStorageAccess),\n      TRANSITIONDURATION = tnsStorage['tTDu'] ? checkStorageValue(tnsStorage['tTDu']) : setLocalStorage(tnsStorage, 'tTDu', whichProperty('transitionDuration'), localStorageAccess),\n      TRANSITIONDELAY = tnsStorage['tTDe'] ? checkStorageValue(tnsStorage['tTDe']) : setLocalStorage(tnsStorage, 'tTDe', whichProperty('transitionDelay'), localStorageAccess),\n      ANIMATIONDURATION = tnsStorage['tADu'] ? checkStorageValue(tnsStorage['tADu']) : setLocalStorage(tnsStorage, 'tADu', whichProperty('animationDuration'), localStorageAccess),\n      ANIMATIONDELAY = tnsStorage['tADe'] ? checkStorageValue(tnsStorage['tADe']) : setLocalStorage(tnsStorage, 'tADe', whichProperty('animationDelay'), localStorageAccess),\n      TRANSITIONEND = tnsStorage['tTE'] ? checkStorageValue(tnsStorage['tTE']) : setLocalStorage(tnsStorage, 'tTE', getEndProperty(TRANSITIONDURATION, 'Transition'), localStorageAccess),\n      ANIMATIONEND = tnsStorage['tAE'] ? checkStorageValue(tnsStorage['tAE']) : setLocalStorage(tnsStorage, 'tAE', getEndProperty(ANIMATIONDURATION, 'Animation'), localStorageAccess);\n\n  // get element nodes from selectors\n  var supportConsoleWarn = win.console && typeof win.console.warn === \"function\",\n      tnsList = ['container', 'controlsContainer', 'prevButton', 'nextButton', 'navContainer', 'autoplayButton'],\n      optionsElements = {};\n\n  tnsList.forEach(function(item) {\n    if (typeof options[item] === 'string') {\n      var str = options[item],\n          el = doc.querySelector(str);\n      optionsElements[item] = str;\n\n      if (el && el.nodeName) {\n        options[item] = el;\n      } else {\n        if (supportConsoleWarn) { console.warn('Can\\'t find', options[item]); }\n        return;\n      }\n    }\n  });\n\n  // make sure at least 1 slide\n  if (options.container.children.length < 1) {\n    if (supportConsoleWarn) { console.warn('No slides found in', options.container); }\n    return;\n   }\n\n  // update options\n  var responsive = options.responsive,\n      nested = options.nested,\n      carousel = options.mode === 'carousel' ? true : false;\n\n  if (responsive) {\n    // apply responsive[0] to options and remove it\n    if (0 in responsive) {\n      options = extend(options, responsive[0]);\n      delete responsive[0];\n    }\n\n    var responsiveTem = {};\n    for (var key in responsive) {\n      var val = responsive[key];\n      // update responsive\n      // from: 300: 2\n      // to:\n      //   300: {\n      //     items: 2\n      //   }\n      val = typeof val === 'number' ? {items: val} : val;\n      responsiveTem[key] = val;\n    }\n    responsive = responsiveTem;\n    responsiveTem = null;\n  }\n\n  // update options\n  function updateOptions (obj) {\n    for (var key in obj) {\n      if (!carousel) {\n        if (key === 'slideBy') { obj[key] = 'page'; }\n        if (key === 'edgePadding') { obj[key] = false; }\n        if (key === 'autoHeight') { obj[key] = false; }\n      }\n\n      // update responsive options\n      if (key === 'responsive') { updateOptions(obj[key]); }\n    }\n  }\n  if (!carousel) { updateOptions(options); }\n\n\n  // === define and set variables ===\n  if (!carousel) {\n    options.axis = 'horizontal';\n    options.slideBy = 'page';\n    options.edgePadding = false;\n\n    var animateIn = options.animateIn,\n        animateOut = options.animateOut,\n        animateDelay = options.animateDelay,\n        animateNormal = options.animateNormal;\n  }\n\n  var horizontal = options.axis === 'horizontal' ? true : false,\n      outerWrapper = doc.createElement('div'),\n      innerWrapper = doc.createElement('div'),\n      middleWrapper,\n      container = options.container,\n      containerParent = container.parentNode,\n      containerHTML = container.outerHTML,\n      slideItems = container.children,\n      slideCount = slideItems.length,\n      breakpointZone,\n      windowWidth = getWindowWidth(),\n      isOn = false;\n  if (responsive) { setBreakpointZone(); }\n  if (carousel) { container.className += ' tns-vpfix'; }\n\n  // fixedWidth: viewport > rightBoundary > indexMax\n  var autoWidth = options.autoWidth,\n      fixedWidth = getOption('fixedWidth'),\n      edgePadding = getOption('edgePadding'),\n      gutter = getOption('gutter'),\n      viewport = getViewportWidth(),\n      center = getOption('center'),\n      items = !autoWidth ? Math.floor(getOption('items')) : 1,\n      slideBy = getOption('slideBy'),\n      viewportMax = options.viewportMax || options.fixedWidthViewportWidth,\n      arrowKeys = getOption('arrowKeys'),\n      speed = getOption('speed'),\n      rewind = options.rewind,\n      loop = rewind ? false : options.loop,\n      autoHeight = getOption('autoHeight'),\n      controls = getOption('controls'),\n      controlsText = getOption('controlsText'),\n      nav = getOption('nav'),\n      touch = getOption('touch'),\n      mouseDrag = getOption('mouseDrag'),\n      autoplay = getOption('autoplay'),\n      autoplayTimeout = getOption('autoplayTimeout'),\n      autoplayText = getOption('autoplayText'),\n      autoplayHoverPause = getOption('autoplayHoverPause'),\n      autoplayResetOnVisibility = getOption('autoplayResetOnVisibility'),\n      sheet = createStyleSheet(),\n      lazyload = options.lazyload,\n      lazyloadSelector = options.lazyloadSelector,\n      slidePositions, // collection of slide positions\n      slideItemsOut = [],\n      cloneCount = loop ? getCloneCountForLoop() : 0,\n      slideCountNew = !carousel ? slideCount + cloneCount : slideCount + cloneCount * 2,\n      hasRightDeadZone = (fixedWidth || autoWidth) && !loop ? true : false,\n      rightBoundary = fixedWidth ? getRightBoundary() : null,\n      updateIndexBeforeTransform = (!carousel || !loop) ? true : false,\n      // transform\n      transformAttr = horizontal ? 'left' : 'top',\n      transformPrefix = '',\n      transformPostfix = '',\n      // index\n      getIndexMax = (function () {\n        if (fixedWidth) {\n          return function() { return center && !loop ? slideCount - 1 : Math.ceil(- rightBoundary / (fixedWidth + gutter)); };\n        } else if (autoWidth) {\n          return function() {\n            for (var i = slideCountNew; i--;) {\n              if (slidePositions[i] >= - rightBoundary) { return i; }\n            }\n          };\n        } else {\n          return function() {\n            if (center && carousel && !loop) {\n              return slideCount - 1;\n            } else {\n              return loop || carousel ? Math.max(0, slideCountNew - Math.ceil(items)) : slideCountNew - 1;\n            }\n          };\n        }\n      })(),\n      index = getStartIndex(getOption('startIndex')),\n      indexCached = index,\n      displayIndex = getCurrentSlide(),\n      indexMin = 0,\n      indexMax = !autoWidth ? getIndexMax() : null,\n      // resize\n      resizeTimer,\n      preventActionWhenRunning = options.preventActionWhenRunning,\n      swipeAngle = options.swipeAngle,\n      moveDirectionExpected = swipeAngle ? '?' : true,\n      running = false,\n      onInit = options.onInit,\n      events = new Events(),\n      // id, class\n      newContainerClasses = ' tns-slider tns-' + options.mode,\n      slideId = container.id || getSlideId(),\n      disable = getOption('disable'),\n      disabled = false,\n      freezable = options.freezable,\n      freeze = freezable && !autoWidth ? getFreeze() : false,\n      frozen = false,\n      controlsEvents = {\n        'click': onControlsClick,\n        'keydown': onControlsKeydown\n      },\n      navEvents = {\n        'click': onNavClick,\n        'keydown': onNavKeydown\n      },\n      hoverEvents = {\n        'mouseover': mouseoverPause,\n        'mouseout': mouseoutRestart\n      },\n      visibilityEvent = {'visibilitychange': onVisibilityChange},\n      docmentKeydownEvent = {'keydown': onDocumentKeydown},\n      touchEvents = {\n        'touchstart': onPanStart,\n        'touchmove': onPanMove,\n        'touchend': onPanEnd,\n        'touchcancel': onPanEnd\n      }, dragEvents = {\n        'mousedown': onPanStart,\n        'mousemove': onPanMove,\n        'mouseup': onPanEnd,\n        'mouseleave': onPanEnd\n      },\n      hasControls = hasOption('controls'),\n      hasNav = hasOption('nav'),\n      navAsThumbnails = autoWidth ? true : options.navAsThumbnails,\n      hasAutoplay = hasOption('autoplay'),\n      hasTouch = hasOption('touch'),\n      hasMouseDrag = hasOption('mouseDrag'),\n      slideActiveClass = 'tns-slide-active',\n      imgCompleteClass = 'tns-complete',\n      imgEvents = {\n        'load': onImgLoaded,\n        'error': onImgFailed\n      },\n      imgsComplete,\n      liveregionCurrent,\n      preventScroll = options.preventScrollOnTouch === 'force' ? true : false;\n\n  // controls\n  if (hasControls) {\n    var controlsContainer = options.controlsContainer,\n        controlsContainerHTML = options.controlsContainer ? options.controlsContainer.outerHTML : '',\n        prevButton = options.prevButton,\n        nextButton = options.nextButton,\n        prevButtonHTML = options.prevButton ? options.prevButton.outerHTML : '',\n        nextButtonHTML = options.nextButton ? options.nextButton.outerHTML : '',\n        prevIsButton,\n        nextIsButton;\n  }\n\n  // nav\n  if (hasNav) {\n    var navContainer = options.navContainer,\n        navContainerHTML = options.navContainer ? options.navContainer.outerHTML : '',\n        navItems,\n        pages = autoWidth ? slideCount : getPages(),\n        pagesCached = 0,\n        navClicked = -1,\n        navCurrentIndex = getCurrentNavIndex(),\n        navCurrentIndexCached = navCurrentIndex,\n        navActiveClass = 'tns-nav-active',\n        navStr = 'Carousel Page ',\n        navStrCurrent = ' (Current Slide)';\n  }\n\n  // autoplay\n  if (hasAutoplay) {\n    var autoplayDirection = options.autoplayDirection === 'forward' ? 1 : -1,\n        autoplayButton = options.autoplayButton,\n        autoplayButtonHTML = options.autoplayButton ? options.autoplayButton.outerHTML : '',\n        autoplayHtmlStrings = ['<span class=\\'tns-visually-hidden\\'>', ' animation</span>'],\n        autoplayTimer,\n        animating,\n        autoplayHoverPaused,\n        autoplayUserPaused,\n        autoplayVisibilityPaused;\n  }\n\n  if (hasTouch || hasMouseDrag) {\n    var initPosition = {},\n        lastPosition = {},\n        translateInit,\n        disX,\n        disY,\n        panStart = false,\n        rafIndex,\n        getDist = horizontal ?\n          function(a, b) { return a.x - b.x; } :\n          function(a, b) { return a.y - b.y; };\n  }\n\n  // disable slider when slidecount <= items\n  if (!autoWidth) { resetVariblesWhenDisable(disable || freeze); }\n\n  if (TRANSFORM) {\n    transformAttr = TRANSFORM;\n    transformPrefix = 'translate';\n\n    if (HAS3DTRANSFORMS) {\n      transformPrefix += horizontal ? '3d(' : '3d(0px, ';\n      transformPostfix = horizontal ? ', 0px, 0px)' : ', 0px)';\n    } else {\n      transformPrefix += horizontal ? 'X(' : 'Y(';\n      transformPostfix = ')';\n    }\n\n  }\n\n  if (carousel) { container.className = container.className.replace('tns-vpfix', ''); }\n  initStructure();\n  initSheet();\n  initSliderTransform();\n\n  // === COMMON FUNCTIONS === //\n  function resetVariblesWhenDisable (condition) {\n    if (condition) {\n      controls = nav = touch = mouseDrag = arrowKeys = autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;\n    }\n  }\n\n  function getCurrentSlide () {\n    var tem = carousel ? index - cloneCount : index;\n    while (tem < 0) { tem += slideCount; }\n    return tem%slideCount + 1;\n  }\n\n  function getStartIndex (ind) {\n    ind = ind ? Math.max(0, Math.min(loop ? slideCount - 1 : slideCount - items, ind)) : 0;\n    return carousel ? ind + cloneCount : ind;\n  }\n\n  function getAbsIndex (i) {\n    if (i == null) { i = index; }\n\n    if (carousel) { i -= cloneCount; }\n    while (i < 0) { i += slideCount; }\n\n    return Math.floor(i%slideCount);\n  }\n\n  function getCurrentNavIndex () {\n    var absIndex = getAbsIndex(),\n        result;\n\n    result = navAsThumbnails ? absIndex :\n      fixedWidth || autoWidth ? Math.ceil((absIndex + 1) * pages / slideCount - 1) :\n          Math.floor(absIndex / items);\n\n    // set active nav to the last one when reaches the right edge\n    if (!loop && carousel && index === indexMax) { result = pages - 1; }\n\n    return result;\n  }\n\n  function getItemsMax () {\n    // fixedWidth or autoWidth while viewportMax is not available\n    if (autoWidth || (fixedWidth && !viewportMax)) {\n      return slideCount - 1;\n    // most cases\n    } else {\n      var str = fixedWidth ? 'fixedWidth' : 'items',\n          arr = [];\n\n      if (fixedWidth || options[str] < slideCount) { arr.push(options[str]); }\n\n      if (responsive) {\n        for (var bp in responsive) {\n          var tem = responsive[bp][str];\n          if (tem && (fixedWidth || tem < slideCount)) { arr.push(tem); }\n        }\n      }\n\n      if (!arr.length) { arr.push(0); }\n\n      return Math.ceil(fixedWidth ? viewportMax / Math.min.apply(null, arr) : Math.max.apply(null, arr));\n    }\n  }\n\n  function getCloneCountForLoop () {\n    var itemsMax = getItemsMax(),\n        result = carousel ? Math.ceil((itemsMax * 5 - slideCount)/2) : (itemsMax * 4 - slideCount);\n    result = Math.max(itemsMax, result);\n\n    return hasOption('edgePadding') ? result + 1 : result;\n  }\n\n  function getWindowWidth () {\n    return win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth;\n  }\n\n  function getInsertPosition (pos) {\n    return pos === 'top' ? 'afterbegin' : 'beforeend';\n  }\n\n  function getClientWidth (el) {\n    if (el == null) { return; }\n    var div = doc.createElement('div'), rect, width;\n    el.appendChild(div);\n    rect = div.getBoundingClientRect();\n    width = rect.right - rect.left;\n    div.remove();\n    return width || getClientWidth(el.parentNode);\n  }\n\n  function getViewportWidth () {\n    var gap = edgePadding ? edgePadding * 2 - gutter : 0;\n    return getClientWidth(containerParent) - gap;\n  }\n\n  function hasOption (item) {\n    if (options[item]) {\n      return true;\n    } else {\n      if (responsive) {\n        for (var bp in responsive) {\n          if (responsive[bp][item]) { return true; }\n        }\n      }\n      return false;\n    }\n  }\n\n  // get option:\n  // fixed width: viewport, fixedWidth, gutter => items\n  // others: window width => all variables\n  // all: items => slideBy\n  function getOption (item, ww) {\n    if (ww == null) { ww = windowWidth; }\n\n    if (item === 'items' && fixedWidth) {\n      return Math.floor((viewport + gutter) / (fixedWidth + gutter)) || 1;\n\n    } else {\n      var result = options[item];\n\n      if (responsive) {\n        for (var bp in responsive) {\n          // bp: convert string to number\n          if (ww >= parseInt(bp)) {\n            if (item in responsive[bp]) { result = responsive[bp][item]; }\n          }\n        }\n      }\n\n      if (item === 'slideBy' && result === 'page') { result = getOption('items'); }\n      if (!carousel && (item === 'slideBy' || item === 'items')) { result = Math.floor(result); }\n\n      return result;\n    }\n  }\n\n  function getSlideMarginLeft (i) {\n    return CALC ?\n      CALC + '(' + i * 100 + '% / ' + slideCountNew + ')' :\n      i * 100 / slideCountNew + '%';\n  }\n\n  function getInnerWrapperStyles (edgePaddingTem, gutterTem, fixedWidthTem, speedTem, autoHeightBP) {\n    var str = '';\n\n    if (edgePaddingTem !== undefined) {\n      var gap = edgePaddingTem;\n      if (gutterTem) { gap -= gutterTem; }\n      str = horizontal ?\n        'margin: 0 ' + gap + 'px 0 ' + edgePaddingTem + 'px;' :\n        'margin: ' + edgePaddingTem + 'px 0 ' + gap + 'px 0;';\n    } else if (gutterTem && !fixedWidthTem) {\n      var gutterTemUnit = '-' + gutterTem + 'px',\n          dir = horizontal ? gutterTemUnit + ' 0 0' : '0 ' + gutterTemUnit + ' 0';\n      str = 'margin: 0 ' + dir + ';';\n    }\n\n    if (!carousel && autoHeightBP && TRANSITIONDURATION && speedTem) { str += getTransitionDurationStyle(speedTem); }\n    return str;\n  }\n\n  function getContainerWidth (fixedWidthTem, gutterTem, itemsTem) {\n    if (fixedWidthTem) {\n      return (fixedWidthTem + gutterTem) * slideCountNew + 'px';\n    } else {\n      return CALC ?\n        CALC + '(' + slideCountNew * 100 + '% / ' + itemsTem + ')' :\n        slideCountNew * 100 / itemsTem + '%';\n    }\n  }\n\n  function getSlideWidthStyle (fixedWidthTem, gutterTem, itemsTem) {\n    var width;\n\n    if (fixedWidthTem) {\n      width = (fixedWidthTem + gutterTem) + 'px';\n    } else {\n      if (!carousel) { itemsTem = Math.floor(itemsTem); }\n      var dividend = carousel ? slideCountNew : itemsTem;\n      width = CALC ?\n        CALC + '(100% / ' + dividend + ')' :\n        100 / dividend + '%';\n    }\n\n    width = 'width:' + width;\n\n    // inner slider: overwrite outer slider styles\n    return nested !== 'inner' ? width + ';' : width + ' !important;';\n  }\n\n  function getSlideGutterStyle (gutterTem) {\n    var str = '';\n\n    // gutter maybe interger || 0\n    // so can't use 'if (gutter)'\n    if (gutterTem !== false) {\n      var prop = horizontal ? 'padding-' : 'margin-',\n          dir = horizontal ? 'right' : 'bottom';\n      str = prop +  dir + ': ' + gutterTem + 'px;';\n    }\n\n    return str;\n  }\n\n  function getCSSPrefix (name, num) {\n    var prefix = name.substring(0, name.length - num).toLowerCase();\n    if (prefix) { prefix = '-' + prefix + '-'; }\n\n    return prefix;\n  }\n\n  function getTransitionDurationStyle (speed) {\n    return getCSSPrefix(TRANSITIONDURATION, 18) + 'transition-duration:' + speed / 1000 + 's;';\n  }\n\n  function getAnimationDurationStyle (speed) {\n    return getCSSPrefix(ANIMATIONDURATION, 17) + 'animation-duration:' + speed / 1000 + 's;';\n  }\n\n  function initStructure () {\n    var classOuter = 'tns-outer',\n        classInner = 'tns-inner',\n        hasGutter = hasOption('gutter');\n\n    outerWrapper.className = classOuter;\n    innerWrapper.className = classInner;\n    outerWrapper.id = slideId + '-ow';\n    innerWrapper.id = slideId + '-iw';\n\n    // set container properties\n    if (container.id === '') { container.id = slideId; }\n    newContainerClasses += PERCENTAGELAYOUT || autoWidth ? ' tns-subpixel' : ' tns-no-subpixel';\n    newContainerClasses += CALC ? ' tns-calc' : ' tns-no-calc';\n    if (autoWidth) { newContainerClasses += ' tns-autowidth'; }\n    newContainerClasses += ' tns-' + options.axis;\n    container.className += newContainerClasses;\n\n    // add constrain layer for carousel\n    if (carousel) {\n      middleWrapper = doc.createElement('div');\n      middleWrapper.id = slideId + '-mw';\n      middleWrapper.className = 'tns-ovh';\n\n      outerWrapper.appendChild(middleWrapper);\n      middleWrapper.appendChild(innerWrapper);\n    } else {\n      outerWrapper.appendChild(innerWrapper);\n    }\n\n    if (autoHeight) {\n      var wp = middleWrapper ? middleWrapper : innerWrapper;\n      wp.className += ' tns-ah';\n    }\n\n    containerParent.insertBefore(outerWrapper, container);\n    innerWrapper.appendChild(container);\n\n    // add id, class, aria attributes\n    // before clone slides\n    forEach(slideItems, function(item, i) {\n      addClass(item, 'tns-item');\n      if (!item.id) { item.id = slideId + '-item' + i; }\n      if (!carousel && animateNormal) { addClass(item, animateNormal); }\n      setAttrs(item, {\n        'aria-hidden': 'true',\n        'tabindex': '-1'\n      });\n    });\n\n    // ## clone slides\n    // carousel: n + slides + n\n    // gallery:      slides + n\n    if (cloneCount) {\n      var fragmentBefore = doc.createDocumentFragment(),\n          fragmentAfter = doc.createDocumentFragment();\n\n      for (var j = cloneCount; j--;) {\n        var num = j%slideCount,\n            cloneFirst = slideItems[num].cloneNode(true);\n        removeAttrs(cloneFirst, 'id');\n        fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);\n\n        if (carousel) {\n          var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);\n          removeAttrs(cloneLast, 'id');\n          fragmentBefore.appendChild(cloneLast);\n        }\n      }\n\n      container.insertBefore(fragmentBefore, container.firstChild);\n      container.appendChild(fragmentAfter);\n      slideItems = container.children;\n    }\n\n  }\n\n  function initSliderTransform () {\n    // ## images loaded/failed\n    if (hasOption('autoHeight') || autoWidth || !horizontal) {\n      var imgs = container.querySelectorAll('img');\n\n      // add img load event listener\n      forEach(imgs, function(img) {\n        var src = img.src;\n\n        if (!lazyload) {\n          // not data img\n          if (src && src.indexOf('data:image') < 0) {\n            img.src = '';\n            addEvents(img, imgEvents);\n            addClass(img, 'loading');\n\n            img.src = src;\n          // data img\n          } else {\n            imgLoaded(img);\n          }\n        }\n      });\n\n      // set imgsComplete\n      raf(function(){ imgsLoadedCheck(arrayFromNodeList(imgs), function() { imgsComplete = true; }); });\n\n      // reset imgs for auto height: check visible imgs only\n      if (hasOption('autoHeight')) { imgs = getImageArray(index, Math.min(index + items - 1, slideCountNew - 1)); }\n\n      lazyload ? initSliderTransformStyleCheck() : raf(function(){ imgsLoadedCheck(arrayFromNodeList(imgs), initSliderTransformStyleCheck); });\n\n    } else {\n      // set container transform property\n      if (carousel) { doContainerTransformSilent(); }\n\n      // update slider tools and events\n      initTools();\n      initEvents();\n    }\n  }\n\n  function initSliderTransformStyleCheck () {\n    if (autoWidth) {\n      // check styles application\n      var num = loop ? index : slideCount - 1;\n\n      (function stylesApplicationCheck() {\n        var left = slideItems[num].getBoundingClientRect().left;\n        var right = slideItems[num - 1].getBoundingClientRect().right;\n\n        (Math.abs(left - right) <= 1) ?\n          initSliderTransformCore() :\n          setTimeout(function(){ stylesApplicationCheck(); }, 16);\n      })();\n\n    } else {\n      initSliderTransformCore();\n    }\n  }\n\n\n  function initSliderTransformCore () {\n    // run Fn()s which are rely on image loading\n    if (!horizontal || autoWidth) {\n      setSlidePositions();\n\n      if (autoWidth) {\n        rightBoundary = getRightBoundary();\n        if (freezable) { freeze = getFreeze(); }\n        indexMax = getIndexMax(); // <= slidePositions, rightBoundary <=\n        resetVariblesWhenDisable(disable || freeze);\n      } else {\n        updateContentWrapperHeight();\n      }\n    }\n\n    // set container transform property\n    if (carousel) { doContainerTransformSilent(); }\n\n    // update slider tools and events\n    initTools();\n    initEvents();\n  }\n\n  function initSheet () {\n    // gallery:\n    // set animation classes and left value for gallery slider\n    if (!carousel) {\n      for (var i = index, l = index + Math.min(slideCount, items); i < l; i++) {\n        var item = slideItems[i];\n        item.style.left = (i - index) * 100 / items + '%';\n        addClass(item, animateIn);\n        removeClass(item, animateNormal);\n      }\n    }\n\n    // #### LAYOUT\n\n    // ## INLINE-BLOCK VS FLOAT\n\n    // ## PercentageLayout:\n    // slides: inline-block\n    // remove blank space between slides by set font-size: 0\n\n    // ## Non PercentageLayout:\n    // slides: float\n    //         margin-right: -100%\n    //         margin-left: ~\n\n    // Resource: https://docs.google.com/spreadsheets/d/147up245wwTXeQYve3BRSAD4oVcvQmuGsFteJOeA5xNQ/edit?usp=sharing\n    if (horizontal) {\n      if (PERCENTAGELAYOUT || autoWidth) {\n        addCSSRule(sheet, '#' + slideId + ' > .tns-item', 'font-size:' + win.getComputedStyle(slideItems[0]).fontSize + ';', getCssRulesLength(sheet));\n        addCSSRule(sheet, '#' + slideId, 'font-size:0;', getCssRulesLength(sheet));\n      } else if (carousel) {\n        forEach(slideItems, function (slide, i) {\n          slide.style.marginLeft = getSlideMarginLeft(i);\n        });\n      }\n    }\n\n\n    // ## BASIC STYLES\n    if (CSSMQ) {\n      // middle wrapper style\n      if (TRANSITIONDURATION) {\n        var str = middleWrapper && options.autoHeight ? getTransitionDurationStyle(options.speed) : '';\n        addCSSRule(sheet, '#' + slideId + '-mw', str, getCssRulesLength(sheet));\n      }\n\n      // inner wrapper styles\n      str = getInnerWrapperStyles(options.edgePadding, options.gutter, options.fixedWidth, options.speed, options.autoHeight);\n      addCSSRule(sheet, '#' + slideId + '-iw', str, getCssRulesLength(sheet));\n\n      // container styles\n      if (carousel) {\n        str = horizontal && !autoWidth ? 'width:' + getContainerWidth(options.fixedWidth, options.gutter, options.items) + ';' : '';\n        if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }\n        addCSSRule(sheet, '#' + slideId, str, getCssRulesLength(sheet));\n      }\n\n      // slide styles\n      str = horizontal && !autoWidth ? getSlideWidthStyle(options.fixedWidth, options.gutter, options.items) : '';\n      if (options.gutter) { str += getSlideGutterStyle(options.gutter); }\n      // set gallery items transition-duration\n      if (!carousel) {\n        if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }\n        if (ANIMATIONDURATION) { str += getAnimationDurationStyle(speed); }\n      }\n      if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }\n\n    // non CSS mediaqueries: IE8\n    // ## update inner wrapper, container, slides if needed\n    // set inline styles for inner wrapper & container\n    // insert stylesheet (one line) for slides only (since slides are many)\n    } else {\n      // middle wrapper styles\n      update_carousel_transition_duration();\n\n      // inner wrapper styles\n      innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, autoHeight);\n\n      // container styles\n      if (carousel && horizontal && !autoWidth) {\n        container.style.width = getContainerWidth(fixedWidth, gutter, items);\n      }\n\n      // slide styles\n      var str = horizontal && !autoWidth ? getSlideWidthStyle(fixedWidth, gutter, items) : '';\n      if (gutter) { str += getSlideGutterStyle(gutter); }\n\n      // append to the last line\n      if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }\n    }\n\n    // ## MEDIAQUERIES\n    if (responsive && CSSMQ) {\n      for (var bp in responsive) {\n        // bp: convert string to number\n        bp = parseInt(bp);\n\n        var opts = responsive[bp],\n            str = '',\n            middleWrapperStr = '',\n            innerWrapperStr = '',\n            containerStr = '',\n            slideStr = '',\n            itemsBP = !autoWidth ? getOption('items', bp) : null,\n            fixedWidthBP = getOption('fixedWidth', bp),\n            speedBP = getOption('speed', bp),\n            edgePaddingBP = getOption('edgePadding', bp),\n            autoHeightBP = getOption('autoHeight', bp),\n            gutterBP = getOption('gutter', bp);\n\n        // middle wrapper string\n        if (TRANSITIONDURATION && middleWrapper && getOption('autoHeight', bp) && 'speed' in opts) {\n          middleWrapperStr = '#' + slideId + '-mw{' + getTransitionDurationStyle(speedBP) + '}';\n        }\n\n        // inner wrapper string\n        if ('edgePadding' in opts || 'gutter' in opts) {\n          innerWrapperStr = '#' + slideId + '-iw{' + getInnerWrapperStyles(edgePaddingBP, gutterBP, fixedWidthBP, speedBP, autoHeightBP) + '}';\n        }\n\n        // container string\n        if (carousel && horizontal && !autoWidth && ('fixedWidth' in opts || 'items' in opts || (fixedWidth && 'gutter' in opts))) {\n          containerStr = 'width:' + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + ';';\n        }\n        if (TRANSITIONDURATION && 'speed' in opts) {\n          containerStr += getTransitionDurationStyle(speedBP);\n        }\n        if (containerStr) {\n          containerStr = '#' + slideId + '{' + containerStr + '}';\n        }\n\n        // slide string\n        if ('fixedWidth' in opts || (fixedWidth && 'gutter' in opts) || !carousel && 'items' in opts) {\n          slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);\n        }\n        if ('gutter' in opts) {\n          slideStr += getSlideGutterStyle(gutterBP);\n        }\n        // set gallery items transition-duration\n        if (!carousel && 'speed' in opts) {\n          if (TRANSITIONDURATION) { slideStr += getTransitionDurationStyle(speedBP); }\n          if (ANIMATIONDURATION) { slideStr += getAnimationDurationStyle(speedBP); }\n        }\n        if (slideStr) { slideStr = '#' + slideId + ' > .tns-item{' + slideStr + '}'; }\n\n        // add up\n        str = middleWrapperStr + innerWrapperStr + containerStr + slideStr;\n\n        if (str) {\n          sheet.insertRule('@media (min-width: ' + bp / 16 + 'em) {' + str + '}', sheet.cssRules.length);\n        }\n      }\n    }\n  }\n\n  function initTools () {\n    // == slides ==\n    updateSlideStatus();\n\n    // == live region ==\n    outerWrapper.insertAdjacentHTML('afterbegin', '<div class=\"tns-liveregion tns-visually-hidden\" aria-live=\"polite\" aria-atomic=\"true\">slide <span class=\"current\">' + getLiveRegionStr() + '</span>  of ' + slideCount + '</div>');\n    liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current');\n\n    // == autoplayInit ==\n    if (hasAutoplay) {\n      var txt = autoplay ? 'stop' : 'start';\n      if (autoplayButton) {\n        setAttrs(autoplayButton, {'data-action': txt});\n      } else if (options.autoplayButtonOutput) {\n        outerWrapper.insertAdjacentHTML(getInsertPosition(options.autoplayPosition), '<button type=\"button\" data-action=\"' + txt + '\">' + autoplayHtmlStrings[0] + txt + autoplayHtmlStrings[1] + autoplayText[0] + '</button>');\n        autoplayButton = outerWrapper.querySelector('[data-action]');\n      }\n\n      // add event\n      if (autoplayButton) {\n        addEvents(autoplayButton, {'click': toggleAutoplay});\n      }\n\n      if (autoplay) {\n        startAutoplay();\n        if (autoplayHoverPause) { addEvents(container, hoverEvents); }\n        if (autoplayResetOnVisibility) { addEvents(container, visibilityEvent); }\n      }\n    }\n\n    // == navInit ==\n    if (hasNav) {\n      var initIndex = !carousel ? 0 : cloneCount;\n      // customized nav\n      // will not hide the navs in case they're thumbnails\n      if (navContainer) {\n        setAttrs(navContainer, {'aria-label': 'Carousel Pagination'});\n        navItems = navContainer.children;\n        forEach(navItems, function(item, i) {\n          setAttrs(item, {\n            'data-nav': i,\n            'tabindex': '-1',\n            'aria-label': navStr + (i + 1),\n            'aria-controls': slideId,\n          });\n        });\n\n      // generated nav\n      } else {\n        var navHtml = '',\n            hiddenStr = navAsThumbnails ? '' : 'style=\"display:none\"';\n        for (var i = 0; i < slideCount; i++) {\n          // hide nav items by default\n          navHtml += '<button type=\"button\" data-nav=\"' + i +'\" tabindex=\"-1\" aria-controls=\"' + slideId + '\" ' + hiddenStr + ' aria-label=\"' + navStr + (i + 1) +'\"></button>';\n        }\n        navHtml = '<div class=\"tns-nav\" aria-label=\"Carousel Pagination\">' + navHtml + '</div>';\n        outerWrapper.insertAdjacentHTML(getInsertPosition(options.navPosition), navHtml);\n\n        navContainer = outerWrapper.querySelector('.tns-nav');\n        navItems = navContainer.children;\n      }\n\n      updateNavVisibility();\n\n      // add transition\n      if (TRANSITIONDURATION) {\n        var prefix = TRANSITIONDURATION.substring(0, TRANSITIONDURATION.length - 18).toLowerCase(),\n            str = 'transition: all ' + speed / 1000 + 's';\n\n        if (prefix) {\n          str = '-' + prefix + '-' + str;\n        }\n\n        addCSSRule(sheet, '[aria-controls^=' + slideId + '-item]', str, getCssRulesLength(sheet));\n      }\n\n      setAttrs(navItems[navCurrentIndex], {'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent});\n      removeAttrs(navItems[navCurrentIndex], 'tabindex');\n      addClass(navItems[navCurrentIndex], navActiveClass);\n\n      // add events\n      addEvents(navContainer, navEvents);\n    }\n\n\n\n    // == controlsInit ==\n    if (hasControls) {\n      if (!controlsContainer && (!prevButton || !nextButton)) {\n        outerWrapper.insertAdjacentHTML(getInsertPosition(options.controlsPosition), '<div class=\"tns-controls\" aria-label=\"Carousel Navigation\" tabindex=\"0\"><button type=\"button\" data-controls=\"prev\" tabindex=\"-1\" aria-controls=\"' + slideId +'\">' + controlsText[0] + '</button><button type=\"button\" data-controls=\"next\" tabindex=\"-1\" aria-controls=\"' + slideId +'\">' + controlsText[1] + '</button></div>');\n\n        controlsContainer = outerWrapper.querySelector('.tns-controls');\n      }\n\n      if (!prevButton || !nextButton) {\n        prevButton = controlsContainer.children[0];\n        nextButton = controlsContainer.children[1];\n      }\n\n      if (options.controlsContainer) {\n        setAttrs(controlsContainer, {\n          'aria-label': 'Carousel Navigation',\n          'tabindex': '0'\n        });\n      }\n\n      if (options.controlsContainer || (options.prevButton && options.nextButton)) {\n        setAttrs([prevButton, nextButton], {\n          'aria-controls': slideId,\n          'tabindex': '-1',\n        });\n      }\n\n      if (options.controlsContainer || (options.prevButton && options.nextButton)) {\n        setAttrs(prevButton, {'data-controls' : 'prev'});\n        setAttrs(nextButton, {'data-controls' : 'next'});\n      }\n\n      prevIsButton = isButton(prevButton);\n      nextIsButton = isButton(nextButton);\n\n      updateControlsStatus();\n\n      // add events\n      if (controlsContainer) {\n        addEvents(controlsContainer, controlsEvents);\n      } else {\n        addEvents(prevButton, controlsEvents);\n        addEvents(nextButton, controlsEvents);\n      }\n    }\n\n    // hide tools if needed\n    disableUI();\n  }\n\n  function initEvents () {\n    // add events\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      addEvents(container, eve);\n    }\n\n    if (touch) { addEvents(container, touchEvents, options.preventScrollOnTouch); }\n    if (mouseDrag) { addEvents(container, dragEvents); }\n    if (arrowKeys) { addEvents(doc, docmentKeydownEvent); }\n\n    if (nested === 'inner') {\n      events.on('outerResized', function () {\n        resizeTasks();\n        events.emit('innerLoaded', info());\n      });\n    } else if (responsive || fixedWidth || autoWidth || autoHeight || !horizontal) {\n      addEvents(win, {'resize': onResize});\n    }\n\n    if (autoHeight) {\n      if (nested === 'outer') {\n        events.on('innerLoaded', doAutoHeight);\n      } else if (!disable) { doAutoHeight(); }\n    }\n\n    doLazyLoad();\n    if (disable) { disableSlider(); } else if (freeze) { freezeSlider(); }\n\n    events.on('indexChanged', additionalUpdates);\n    if (nested === 'inner') { events.emit('innerLoaded', info()); }\n    if (typeof onInit === 'function') { onInit(info()); }\n    isOn = true;\n  }\n\n  function destroy () {\n    // sheet\n    sheet.disabled = true;\n    if (sheet.ownerNode) { sheet.ownerNode.remove(); }\n\n    // remove win event listeners\n    removeEvents(win, {'resize': onResize});\n\n    // arrowKeys, controls, nav\n    if (arrowKeys) { removeEvents(doc, docmentKeydownEvent); }\n    if (controlsContainer) { removeEvents(controlsContainer, controlsEvents); }\n    if (navContainer) { removeEvents(navContainer, navEvents); }\n\n    // autoplay\n    removeEvents(container, hoverEvents);\n    removeEvents(container, visibilityEvent);\n    if (autoplayButton) { removeEvents(autoplayButton, {'click': toggleAutoplay}); }\n    if (autoplay) { clearInterval(autoplayTimer); }\n\n    // container\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      removeEvents(container, eve);\n    }\n    if (touch) { removeEvents(container, touchEvents); }\n    if (mouseDrag) { removeEvents(container, dragEvents); }\n\n    // cache Object values in options && reset HTML\n    var htmlList = [containerHTML, controlsContainerHTML, prevButtonHTML, nextButtonHTML, navContainerHTML, autoplayButtonHTML];\n\n    tnsList.forEach(function(item, i) {\n      var el = item === 'container' ? outerWrapper : options[item];\n\n      if (typeof el === 'object' && el) {\n        var prevEl = el.previousElementSibling ? el.previousElementSibling : false,\n            parentEl = el.parentNode;\n        el.outerHTML = htmlList[i];\n        options[item] = prevEl ? prevEl.nextElementSibling : parentEl.firstElementChild;\n      }\n    });\n\n\n    // reset variables\n    tnsList = animateIn = animateOut = animateDelay = animateNormal = horizontal = outerWrapper = innerWrapper = container = containerParent = containerHTML = slideItems = slideCount = breakpointZone = windowWidth = autoWidth = fixedWidth = edgePadding = gutter = viewport = items = slideBy = viewportMax = arrowKeys = speed = rewind = loop = autoHeight = sheet = lazyload = slidePositions = slideItemsOut = cloneCount = slideCountNew = hasRightDeadZone = rightBoundary = updateIndexBeforeTransform = transformAttr = transformPrefix = transformPostfix = getIndexMax = index = indexCached = indexMin = indexMax = resizeTimer = swipeAngle = moveDirectionExpected = running = onInit = events = newContainerClasses = slideId = disable = disabled = freezable = freeze = frozen = controlsEvents = navEvents = hoverEvents = visibilityEvent = docmentKeydownEvent = touchEvents = dragEvents = hasControls = hasNav = navAsThumbnails = hasAutoplay = hasTouch = hasMouseDrag = slideActiveClass = imgCompleteClass = imgEvents = imgsComplete = controls = controlsText = controlsContainer = controlsContainerHTML = prevButton = nextButton = prevIsButton = nextIsButton = nav = navContainer = navContainerHTML = navItems = pages = pagesCached = navClicked = navCurrentIndex = navCurrentIndexCached = navActiveClass = navStr = navStrCurrent = autoplay = autoplayTimeout = autoplayDirection = autoplayText = autoplayHoverPause = autoplayButton = autoplayButtonHTML = autoplayResetOnVisibility = autoplayHtmlStrings = autoplayTimer = animating = autoplayHoverPaused = autoplayUserPaused = autoplayVisibilityPaused = initPosition = lastPosition = translateInit = disX = disY = panStart = rafIndex = getDist = touch = mouseDrag = null;\n    // check variables\n    // [animateIn, animateOut, animateDelay, animateNormal, horizontal, outerWrapper, innerWrapper, container, containerParent, containerHTML, slideItems, slideCount, breakpointZone, windowWidth, autoWidth, fixedWidth, edgePadding, gutter, viewport, items, slideBy, viewportMax, arrowKeys, speed, rewind, loop, autoHeight, sheet, lazyload, slidePositions, slideItemsOut, cloneCount, slideCountNew, hasRightDeadZone, rightBoundary, updateIndexBeforeTransform, transformAttr, transformPrefix, transformPostfix, getIndexMax, index, indexCached, indexMin, indexMax, resizeTimer, swipeAngle, moveDirectionExpected, running, onInit, events, newContainerClasses, slideId, disable, disabled, freezable, freeze, frozen, controlsEvents, navEvents, hoverEvents, visibilityEvent, docmentKeydownEvent, touchEvents, dragEvents, hasControls, hasNav, navAsThumbnails, hasAutoplay, hasTouch, hasMouseDrag, slideActiveClass, imgCompleteClass, imgEvents, imgsComplete, controls, controlsText, controlsContainer, controlsContainerHTML, prevButton, nextButton, prevIsButton, nextIsButton, nav, navContainer, navContainerHTML, navItems, pages, pagesCached, navClicked, navCurrentIndex, navCurrentIndexCached, navActiveClass, navStr, navStrCurrent, autoplay, autoplayTimeout, autoplayDirection, autoplayText, autoplayHoverPause, autoplayButton, autoplayButtonHTML, autoplayResetOnVisibility, autoplayHtmlStrings, autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused, initPosition, lastPosition, translateInit, disX, disY, panStart, rafIndex, getDist, touch, mouseDrag ].forEach(function(item) { if (item !== null) { console.log(item); } });\n\n    for (var a in this) {\n      if (a !== 'rebuild') { this[a] = null; }\n    }\n    isOn = false;\n  }\n\n// === ON RESIZE ===\n  // responsive || fixedWidth || autoWidth || !horizontal\n  function onResize (e) {\n    raf(function(){ resizeTasks(getEvent(e)); });\n  }\n\n  function resizeTasks (e) {\n    if (!isOn) { return; }\n    if (nested === 'outer') { events.emit('outerResized', info(e)); }\n    windowWidth = getWindowWidth();\n    var bpChanged,\n        breakpointZoneTem = breakpointZone,\n        needContainerTransform = false;\n\n    if (responsive) {\n      setBreakpointZone();\n      bpChanged = breakpointZoneTem !== breakpointZone;\n      // if (hasRightDeadZone) { needContainerTransform = true; } // *?\n      if (bpChanged) { events.emit('newBreakpointStart', info(e)); }\n    }\n\n    var indChanged,\n        itemsChanged,\n        itemsTem = items,\n        disableTem = disable,\n        freezeTem = freeze,\n        arrowKeysTem = arrowKeys,\n        controlsTem = controls,\n        navTem = nav,\n        touchTem = touch,\n        mouseDragTem = mouseDrag,\n        autoplayTem = autoplay,\n        autoplayHoverPauseTem = autoplayHoverPause,\n        autoplayResetOnVisibilityTem = autoplayResetOnVisibility,\n        indexTem = index;\n\n    if (bpChanged) {\n      var fixedWidthTem = fixedWidth,\n          autoHeightTem = autoHeight,\n          controlsTextTem = controlsText,\n          centerTem = center,\n          autoplayTextTem = autoplayText;\n\n      if (!CSSMQ) {\n        var gutterTem = gutter,\n            edgePaddingTem = edgePadding;\n      }\n    }\n\n    // get option:\n    // fixed width: viewport, fixedWidth, gutter => items\n    // others: window width => all variables\n    // all: items => slideBy\n    arrowKeys = getOption('arrowKeys');\n    controls = getOption('controls');\n    nav = getOption('nav');\n    touch = getOption('touch');\n    center = getOption('center');\n    mouseDrag = getOption('mouseDrag');\n    autoplay = getOption('autoplay');\n    autoplayHoverPause = getOption('autoplayHoverPause');\n    autoplayResetOnVisibility = getOption('autoplayResetOnVisibility');\n\n    if (bpChanged) {\n      disable = getOption('disable');\n      fixedWidth = getOption('fixedWidth');\n      speed = getOption('speed');\n      autoHeight = getOption('autoHeight');\n      controlsText = getOption('controlsText');\n      autoplayText = getOption('autoplayText');\n      autoplayTimeout = getOption('autoplayTimeout');\n\n      if (!CSSMQ) {\n        edgePadding = getOption('edgePadding');\n        gutter = getOption('gutter');\n      }\n    }\n    // update options\n    resetVariblesWhenDisable(disable);\n\n    viewport = getViewportWidth(); // <= edgePadding, gutter\n    if ((!horizontal || autoWidth) && !disable) {\n      setSlidePositions();\n      if (!horizontal) {\n        updateContentWrapperHeight(); // <= setSlidePositions\n        needContainerTransform = true;\n      }\n    }\n    if (fixedWidth || autoWidth) {\n      rightBoundary = getRightBoundary(); // autoWidth: <= viewport, slidePositions, gutter\n                                          // fixedWidth: <= viewport, fixedWidth, gutter\n      indexMax = getIndexMax(); // autoWidth: <= rightBoundary, slidePositions\n                                // fixedWidth: <= rightBoundary, fixedWidth, gutter\n    }\n\n    if (bpChanged || fixedWidth) {\n      items = getOption('items');\n      slideBy = getOption('slideBy');\n      itemsChanged = items !== itemsTem;\n\n      if (itemsChanged) {\n        if (!fixedWidth && !autoWidth) { indexMax = getIndexMax(); } // <= items\n        // check index before transform in case\n        // slider reach the right edge then items become bigger\n        updateIndex();\n      }\n    }\n\n    if (bpChanged) {\n      if (disable !== disableTem) {\n        if (disable) {\n          disableSlider();\n        } else {\n          enableSlider(); // <= slidePositions, rightBoundary, indexMax\n        }\n      }\n    }\n\n    if (freezable && (bpChanged || fixedWidth || autoWidth)) {\n      freeze = getFreeze(); // <= autoWidth: slidePositions, gutter, viewport, rightBoundary\n                            // <= fixedWidth: fixedWidth, gutter, rightBoundary\n                            // <= others: items\n\n      if (freeze !== freezeTem) {\n        if (freeze) {\n          doContainerTransform(getContainerTransformValue(getStartIndex(0)));\n          freezeSlider();\n        } else {\n          unfreezeSlider();\n          needContainerTransform = true;\n        }\n      }\n    }\n\n    resetVariblesWhenDisable(disable || freeze); // controls, nav, touch, mouseDrag, arrowKeys, autoplay, autoplayHoverPause, autoplayResetOnVisibility\n    if (!autoplay) { autoplayHoverPause = autoplayResetOnVisibility = false; }\n\n    if (arrowKeys !== arrowKeysTem) {\n      arrowKeys ?\n        addEvents(doc, docmentKeydownEvent) :\n        removeEvents(doc, docmentKeydownEvent);\n    }\n    if (controls !== controlsTem) {\n      if (controls) {\n        if (controlsContainer) {\n          showElement(controlsContainer);\n        } else {\n          if (prevButton) { showElement(prevButton); }\n          if (nextButton) { showElement(nextButton); }\n        }\n      } else {\n        if (controlsContainer) {\n          hideElement(controlsContainer);\n        } else {\n          if (prevButton) { hideElement(prevButton); }\n          if (nextButton) { hideElement(nextButton); }\n        }\n      }\n    }\n    if (nav !== navTem) {\n      nav ?\n        showElement(navContainer) :\n        hideElement(navContainer);\n    }\n    if (touch !== touchTem) {\n      touch ?\n        addEvents(container, touchEvents, options.preventScrollOnTouch) :\n        removeEvents(container, touchEvents);\n    }\n    if (mouseDrag !== mouseDragTem) {\n      mouseDrag ?\n        addEvents(container, dragEvents) :\n        removeEvents(container, dragEvents);\n    }\n    if (autoplay !== autoplayTem) {\n      if (autoplay) {\n        if (autoplayButton) { showElement(autoplayButton); }\n        if (!animating && !autoplayUserPaused) { startAutoplay(); }\n      } else {\n        if (autoplayButton) { hideElement(autoplayButton); }\n        if (animating) { stopAutoplay(); }\n      }\n    }\n    if (autoplayHoverPause !== autoplayHoverPauseTem) {\n      autoplayHoverPause ?\n        addEvents(container, hoverEvents) :\n        removeEvents(container, hoverEvents);\n    }\n    if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) {\n      autoplayResetOnVisibility ?\n        addEvents(doc, visibilityEvent) :\n        removeEvents(doc, visibilityEvent);\n    }\n\n    if (bpChanged) {\n      if (fixedWidth !== fixedWidthTem || center !== centerTem) { needContainerTransform = true; }\n\n      if (autoHeight !== autoHeightTem) {\n        if (!autoHeight) { innerWrapper.style.height = ''; }\n      }\n\n      if (controls && controlsText !== controlsTextTem) {\n        prevButton.innerHTML = controlsText[0];\n        nextButton.innerHTML = controlsText[1];\n      }\n\n      if (autoplayButton && autoplayText !== autoplayTextTem) {\n        var i = autoplay ? 1 : 0,\n            html = autoplayButton.innerHTML,\n            len = html.length - autoplayTextTem[i].length;\n        if (html.substring(len) === autoplayTextTem[i]) {\n          autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];\n        }\n      }\n    } else {\n      if (center && (fixedWidth || autoWidth)) { needContainerTransform = true; }\n    }\n\n    if (itemsChanged || fixedWidth && !autoWidth) {\n      pages = getPages();\n      updateNavVisibility();\n    }\n\n    indChanged = index !== indexTem;\n    if (indChanged) {\n      events.emit('indexChanged', info());\n      needContainerTransform = true;\n    } else if (itemsChanged) {\n      if (!indChanged) { additionalUpdates(); }\n    } else if (fixedWidth || autoWidth) {\n      doLazyLoad();\n      updateSlideStatus();\n      updateLiveRegion();\n    }\n\n    if (itemsChanged && !carousel) { updateGallerySlidePositions(); }\n\n    if (!disable && !freeze) {\n      // non-mediaqueries: IE8\n      if (bpChanged && !CSSMQ) {\n        // middle wrapper styles\n\n        // inner wrapper styles\n        if (edgePadding !== edgePaddingTem || gutter !== gutterTem) {\n          innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, speed, autoHeight);\n        }\n\n        if (horizontal) {\n          // container styles\n          if (carousel) {\n            container.style.width = getContainerWidth(fixedWidth, gutter, items);\n          }\n\n          // slide styles\n          var str = getSlideWidthStyle(fixedWidth, gutter, items) +\n                    getSlideGutterStyle(gutter);\n\n          // remove the last line and\n          // add new styles\n          removeCSSRule(sheet, getCssRulesLength(sheet) - 1);\n          addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet));\n        }\n      }\n\n      // auto height\n      if (autoHeight) { doAutoHeight(); }\n\n      if (needContainerTransform) {\n        doContainerTransformSilent();\n        indexCached = index;\n      }\n    }\n\n    if (bpChanged) { events.emit('newBreakpointEnd', info(e)); }\n  }\n\n\n\n\n\n  // === INITIALIZATION FUNCTIONS === //\n  function getFreeze () {\n    if (!fixedWidth && !autoWidth) {\n      var a = center ? items - (items - 1) / 2 : items;\n      return  slideCount <= a;\n    }\n\n    var width = fixedWidth ? (fixedWidth + gutter) * slideCount : slidePositions[slideCount],\n        vp = edgePadding ? viewport + edgePadding * 2 : viewport + gutter;\n\n    if (center) {\n      vp -= fixedWidth ? (viewport - fixedWidth) / 2 : (viewport - (slidePositions[index + 1] - slidePositions[index] - gutter)) / 2;\n    }\n\n    return width <= vp;\n  }\n\n  function setBreakpointZone () {\n    breakpointZone = 0;\n    for (var bp in responsive) {\n      bp = parseInt(bp); // convert string to number\n      if (windowWidth >= bp) { breakpointZone = bp; }\n    }\n  }\n\n  // (slideBy, indexMin, indexMax) => index\n  var updateIndex = (function () {\n    return loop ?\n      carousel ?\n        // loop + carousel\n        function () {\n          var leftEdge = indexMin,\n              rightEdge = indexMax;\n\n          leftEdge += slideBy;\n          rightEdge -= slideBy;\n\n          // adjust edges when has edge paddings\n          // or fixed-width slider with extra space on the right side\n          if (edgePadding) {\n            leftEdge += 1;\n            rightEdge -= 1;\n          } else if (fixedWidth) {\n            if ((viewport + gutter)%(fixedWidth + gutter)) { rightEdge -= 1; }\n          }\n\n          if (cloneCount) {\n            if (index > rightEdge) {\n              index -= slideCount;\n            } else if (index < leftEdge) {\n              index += slideCount;\n            }\n          }\n        } :\n        // loop + gallery\n        function() {\n          if (index > indexMax) {\n            while (index >= indexMin + slideCount) { index -= slideCount; }\n          } else if (index < indexMin) {\n            while (index <= indexMax - slideCount) { index += slideCount; }\n          }\n        } :\n      // non-loop\n      function() {\n        index = Math.max(indexMin, Math.min(indexMax, index));\n      };\n  })();\n\n  function disableUI () {\n    if (!autoplay && autoplayButton) { hideElement(autoplayButton); }\n    if (!nav && navContainer) { hideElement(navContainer); }\n    if (!controls) {\n      if (controlsContainer) {\n        hideElement(controlsContainer);\n      } else {\n        if (prevButton) { hideElement(prevButton); }\n        if (nextButton) { hideElement(nextButton); }\n      }\n    }\n  }\n\n  function enableUI () {\n    if (autoplay && autoplayButton) { showElement(autoplayButton); }\n    if (nav && navContainer) { showElement(navContainer); }\n    if (controls) {\n      if (controlsContainer) {\n        showElement(controlsContainer);\n      } else {\n        if (prevButton) { showElement(prevButton); }\n        if (nextButton) { showElement(nextButton); }\n      }\n    }\n  }\n\n  function freezeSlider () {\n    if (frozen) { return; }\n\n    // remove edge padding from inner wrapper\n    if (edgePadding) { innerWrapper.style.margin = '0px'; }\n\n    // add class tns-transparent to cloned slides\n    if (cloneCount) {\n      var str = 'tns-transparent';\n      for (var i = cloneCount; i--;) {\n        if (carousel) { addClass(slideItems[i], str); }\n        addClass(slideItems[slideCountNew - i - 1], str);\n      }\n    }\n\n    // update tools\n    disableUI();\n\n    frozen = true;\n  }\n\n  function unfreezeSlider () {\n    if (!frozen) { return; }\n\n    // restore edge padding for inner wrapper\n    // for mordern browsers\n    if (edgePadding && CSSMQ) { innerWrapper.style.margin = ''; }\n\n    // remove class tns-transparent to cloned slides\n    if (cloneCount) {\n      var str = 'tns-transparent';\n      for (var i = cloneCount; i--;) {\n        if (carousel) { removeClass(slideItems[i], str); }\n        removeClass(slideItems[slideCountNew - i - 1], str);\n      }\n    }\n\n    // update tools\n    enableUI();\n\n    frozen = false;\n  }\n\n  function disableSlider () {\n    if (disabled) { return; }\n\n    sheet.disabled = true;\n    container.className = container.className.replace(newContainerClasses.substring(1), '');\n    removeAttrs(container, ['style']);\n    if (loop) {\n      for (var j = cloneCount; j--;) {\n        if (carousel) { hideElement(slideItems[j]); }\n        hideElement(slideItems[slideCountNew - j - 1]);\n      }\n    }\n\n    // vertical slider\n    if (!horizontal || !carousel) { removeAttrs(innerWrapper, ['style']); }\n\n    // gallery\n    if (!carousel) {\n      for (var i = index, l = index + slideCount; i < l; i++) {\n        var item = slideItems[i];\n        removeAttrs(item, ['style']);\n        removeClass(item, animateIn);\n        removeClass(item, animateNormal);\n      }\n    }\n\n    // update tools\n    disableUI();\n\n    disabled = true;\n  }\n\n  function enableSlider () {\n    if (!disabled) { return; }\n\n    sheet.disabled = false;\n    container.className += newContainerClasses;\n    doContainerTransformSilent();\n\n    if (loop) {\n      for (var j = cloneCount; j--;) {\n        if (carousel) { showElement(slideItems[j]); }\n        showElement(slideItems[slideCountNew - j - 1]);\n      }\n    }\n\n    // gallery\n    if (!carousel) {\n      for (var i = index, l = index + slideCount; i < l; i++) {\n        var item = slideItems[i],\n            classN = i < index + items ? animateIn : animateNormal;\n        item.style.left = (i - index) * 100 / items + '%';\n        addClass(item, classN);\n      }\n    }\n\n    // update tools\n    enableUI();\n\n    disabled = false;\n  }\n\n  function updateLiveRegion () {\n    var str = getLiveRegionStr();\n    if (liveregionCurrent.innerHTML !== str) { liveregionCurrent.innerHTML = str; }\n  }\n\n  function getLiveRegionStr () {\n    var arr = getVisibleSlideRange(),\n        start = arr[0] + 1,\n        end = arr[1] + 1;\n    return start === end ? start + '' : start + ' to ' + end;\n  }\n\n  function getVisibleSlideRange (val) {\n    if (val == null) { val = getContainerTransformValue(); }\n    var start = index, end, rangestart, rangeend;\n\n    // get range start, range end for autoWidth and fixedWidth\n    if (center || edgePadding) {\n      if (autoWidth || fixedWidth) {\n        rangestart = - (parseFloat(val) + edgePadding);\n        rangeend = rangestart + viewport + edgePadding * 2;\n      }\n    } else {\n      if (autoWidth) {\n        rangestart = slidePositions[index];\n        rangeend = rangestart + viewport;\n      }\n    }\n\n    // get start, end\n    // - check auto width\n    if (autoWidth) {\n      slidePositions.forEach(function(point, i) {\n        if (i < slideCountNew) {\n          if ((center || edgePadding) && point <= rangestart + 0.5) { start = i; }\n          if (rangeend - point >= 0.5) { end = i; }\n        }\n      });\n\n    // - check percentage width, fixed width\n    } else {\n\n      if (fixedWidth) {\n        var cell = fixedWidth + gutter;\n        if (center || edgePadding) {\n          start = Math.floor(rangestart/cell);\n          end = Math.ceil(rangeend/cell - 1);\n        } else {\n          end = start + Math.ceil(viewport/cell) - 1;\n        }\n\n      } else {\n        if (center || edgePadding) {\n          var a = items - 1;\n          if (center) {\n            start -= a / 2;\n            end = index + a / 2;\n          } else {\n            end = index + a;\n          }\n\n          if (edgePadding) {\n            var b = edgePadding * items / viewport;\n            start -= b;\n            end += b;\n          }\n\n          start = Math.floor(start);\n          end = Math.ceil(end);\n        } else {\n          end = start + items - 1;\n        }\n      }\n\n      start = Math.max(start, 0);\n      end = Math.min(end, slideCountNew - 1);\n    }\n\n    return [start, end];\n  }\n\n  function doLazyLoad () {\n    if (lazyload && !disable) {\n      var arg = getVisibleSlideRange();\n      arg.push(lazyloadSelector);\n\n      getImageArray.apply(null, arg).forEach(function (img) {\n        if (!hasClass(img, imgCompleteClass)) {\n          // stop propagation transitionend event to container\n          var eve = {};\n          eve[TRANSITIONEND] = function (e) { e.stopPropagation(); };\n          addEvents(img, eve);\n\n          addEvents(img, imgEvents);\n\n          // update src\n          img.src = getAttr(img, 'data-src');\n\n          // update srcset\n          var srcset = getAttr(img, 'data-srcset');\n          if (srcset) { img.srcset = srcset; }\n\n          addClass(img, 'loading');\n        }\n      });\n    }\n  }\n\n  function onImgLoaded (e) {\n    imgLoaded(getTarget(e));\n  }\n\n  function onImgFailed (e) {\n    imgFailed(getTarget(e));\n  }\n\n  function imgLoaded (img) {\n    addClass(img, 'loaded');\n    imgCompleted(img);\n  }\n\n  function imgFailed (img) {\n    addClass(img, 'failed');\n    imgCompleted(img);\n  }\n\n  function imgCompleted (img) {\n    addClass(img, imgCompleteClass);\n    removeClass(img, 'loading');\n    removeEvents(img, imgEvents);\n  }\n\n  function getImageArray (start, end, imgSelector) {\n    var imgs = [];\n    if (!imgSelector) { imgSelector = 'img'; }\n\n    while (start <= end) {\n      forEach(slideItems[start].querySelectorAll(imgSelector), function (img) { imgs.push(img); });\n      start++;\n    }\n\n    return imgs;\n  }\n\n  // check if all visible images are loaded\n  // and update container height if it's done\n  function doAutoHeight () {\n    var imgs = getImageArray.apply(null, getVisibleSlideRange());\n    raf(function(){ imgsLoadedCheck(imgs, updateInnerWrapperHeight); });\n  }\n\n  function imgsLoadedCheck (imgs, cb) {\n    // execute callback function if all images are complete\n    if (imgsComplete) { return cb(); }\n\n    // check image classes\n    imgs.forEach(function (img, index) {\n      if (!lazyload && img.complete) { imgCompleted(img); } // Check image.complete\n      if (hasClass(img, imgCompleteClass)) { imgs.splice(index, 1); }\n    });\n\n    // execute callback function if selected images are all complete\n    if (!imgs.length) { return cb(); }\n\n    // otherwise execute this functiona again\n    raf(function(){ imgsLoadedCheck(imgs, cb); });\n  }\n\n  function additionalUpdates () {\n    doLazyLoad();\n    updateSlideStatus();\n    updateLiveRegion();\n    updateControlsStatus();\n    updateNavStatus();\n  }\n\n\n  function update_carousel_transition_duration () {\n    if (carousel && autoHeight) {\n      middleWrapper.style[TRANSITIONDURATION] = speed / 1000 + 's';\n    }\n  }\n\n  function getMaxSlideHeight (slideStart, slideRange) {\n    var heights = [];\n    for (var i = slideStart, l = Math.min(slideStart + slideRange, slideCountNew); i < l; i++) {\n      heights.push(slideItems[i].offsetHeight);\n    }\n\n    return Math.max.apply(null, heights);\n  }\n\n  // update inner wrapper height\n  // 1. get the max-height of the visible slides\n  // 2. set transitionDuration to speed\n  // 3. update inner wrapper height to max-height\n  // 4. set transitionDuration to 0s after transition done\n  function updateInnerWrapperHeight () {\n    var maxHeight = autoHeight ? getMaxSlideHeight(index, items) : getMaxSlideHeight(cloneCount, slideCount),\n        wp = middleWrapper ? middleWrapper : innerWrapper;\n\n    if (wp.style.height !== maxHeight) { wp.style.height = maxHeight + 'px'; }\n  }\n\n  // get the distance from the top edge of the first slide to each slide\n  // (init) => slidePositions\n  function setSlidePositions () {\n    slidePositions = [0];\n    var attr = horizontal ? 'left' : 'top',\n        attr2 = horizontal ? 'right' : 'bottom',\n        base = slideItems[0].getBoundingClientRect()[attr];\n\n    forEach(slideItems, function(item, i) {\n      // skip the first slide\n      if (i) { slidePositions.push(item.getBoundingClientRect()[attr] - base); }\n      // add the end edge\n      if (i === slideCountNew - 1) { slidePositions.push(item.getBoundingClientRect()[attr2] - base); }\n    });\n  }\n\n  // update slide\n  function updateSlideStatus () {\n    var range = getVisibleSlideRange(),\n        start = range[0],\n        end = range[1];\n\n    forEach(slideItems, function(item, i) {\n      // show slides\n      if (i >= start && i <= end) {\n        if (hasAttr(item, 'aria-hidden')) {\n          removeAttrs(item, ['aria-hidden', 'tabindex']);\n          addClass(item, slideActiveClass);\n        }\n      // hide slides\n      } else {\n        if (!hasAttr(item, 'aria-hidden')) {\n          setAttrs(item, {\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n          });\n          removeClass(item, slideActiveClass);\n        }\n      }\n    });\n  }\n\n  // gallery: update slide position\n  function updateGallerySlidePositions () {\n    var l = index + Math.min(slideCount, items);\n    for (var i = slideCountNew; i--;) {\n      var item = slideItems[i];\n\n      if (i >= index && i < l) {\n        // add transitions to visible slides when adjusting their positions\n        addClass(item, 'tns-moving');\n\n        item.style.left = (i - index) * 100 / items + '%';\n        addClass(item, animateIn);\n        removeClass(item, animateNormal);\n      } else if (item.style.left) {\n        item.style.left = '';\n        addClass(item, animateNormal);\n        removeClass(item, animateIn);\n      }\n\n      // remove outlet animation\n      removeClass(item, animateOut);\n    }\n\n    // removing '.tns-moving'\n    setTimeout(function() {\n      forEach(slideItems, function(el) {\n        removeClass(el, 'tns-moving');\n      });\n    }, 300);\n  }\n\n  // set tabindex on Nav\n  function updateNavStatus () {\n    // get current nav\n    if (nav) {\n      navCurrentIndex = navClicked >= 0 ? navClicked : getCurrentNavIndex();\n      navClicked = -1;\n\n      if (navCurrentIndex !== navCurrentIndexCached) {\n        var navPrev = navItems[navCurrentIndexCached],\n            navCurrent = navItems[navCurrentIndex];\n\n        setAttrs(navPrev, {\n          'tabindex': '-1',\n          'aria-label': navStr + (navCurrentIndexCached + 1)\n        });\n        removeClass(navPrev, navActiveClass);\n\n        setAttrs(navCurrent, {'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent});\n        removeAttrs(navCurrent, 'tabindex');\n        addClass(navCurrent, navActiveClass);\n\n        navCurrentIndexCached = navCurrentIndex;\n      }\n    }\n  }\n\n  function getLowerCaseNodeName (el) {\n    return el.nodeName.toLowerCase();\n  }\n\n  function isButton (el) {\n    return getLowerCaseNodeName(el) === 'button';\n  }\n\n  function isAriaDisabled (el) {\n    return el.getAttribute('aria-disabled') === 'true';\n  }\n\n  function disEnableElement (isButton, el, val) {\n    if (isButton) {\n      el.disabled = val;\n    } else {\n      el.setAttribute('aria-disabled', val.toString());\n    }\n  }\n\n  // set 'disabled' to true on controls when reach the edges\n  function updateControlsStatus () {\n    if (!controls || rewind || loop) { return; }\n\n    var prevDisabled = (prevIsButton) ? prevButton.disabled : isAriaDisabled(prevButton),\n        nextDisabled = (nextIsButton) ? nextButton.disabled : isAriaDisabled(nextButton),\n        disablePrev = (index <= indexMin) ? true : false,\n        disableNext = (!rewind && index >= indexMax) ? true : false;\n\n    if (disablePrev && !prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, true);\n    }\n    if (!disablePrev && prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, false);\n    }\n    if (disableNext && !nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, true);\n    }\n    if (!disableNext && nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, false);\n    }\n  }\n\n  // set duration\n  function resetDuration (el, str) {\n    if (TRANSITIONDURATION) { el.style[TRANSITIONDURATION] = str; }\n  }\n\n  function getSliderWidth () {\n    return fixedWidth ? (fixedWidth + gutter) * slideCountNew : slidePositions[slideCountNew];\n  }\n\n  function getCenterGap (num) {\n    if (num == null) { num = index; }\n\n    var gap = edgePadding ? gutter : 0;\n    return autoWidth ? ((viewport - gap) - (slidePositions[num + 1] - slidePositions[num] - gutter))/2 :\n      fixedWidth ? (viewport - fixedWidth) / 2 :\n        (items - 1) / 2;\n  }\n\n  function getRightBoundary () {\n    var gap = edgePadding ? gutter : 0,\n        result = (viewport + gap) - getSliderWidth();\n\n    if (center && !loop) {\n      result = fixedWidth ? - (fixedWidth + gutter) * (slideCountNew - 1) - getCenterGap() :\n        getCenterGap(slideCountNew - 1) - slidePositions[slideCountNew - 1];\n    }\n    if (result > 0) { result = 0; }\n\n    return result;\n  }\n\n  function getContainerTransformValue (num) {\n    if (num == null) { num = index; }\n\n    var val;\n    if (horizontal && !autoWidth) {\n      if (fixedWidth) {\n        val = - (fixedWidth + gutter) * num;\n        if (center) { val += getCenterGap(); }\n      } else {\n        var denominator = TRANSFORM ? slideCountNew : items;\n        if (center) { num -= getCenterGap(); }\n        val = - num * 100 / denominator;\n      }\n    } else {\n      val = - slidePositions[num];\n      if (center && autoWidth) {\n        val += getCenterGap();\n      }\n    }\n\n    if (hasRightDeadZone) { val = Math.max(val, rightBoundary); }\n\n    val += (horizontal && !autoWidth && !fixedWidth) ? '%' : 'px';\n\n    return val;\n  }\n\n  function doContainerTransformSilent (val) {\n    resetDuration(container, '0s');\n    doContainerTransform(val);\n  }\n\n  function doContainerTransform (val) {\n    if (val == null) { val = getContainerTransformValue(); }\n    container.style[transformAttr] = transformPrefix + val + transformPostfix;\n  }\n\n  function animateSlide (number, classOut, classIn, isOut) {\n    var l = number + items;\n    if (!loop) { l = Math.min(l, slideCountNew); }\n\n    for (var i = number; i < l; i++) {\n        var item = slideItems[i];\n\n      // set item positions\n      if (!isOut) { item.style.left = (i - index) * 100 / items + '%'; }\n\n      if (animateDelay && TRANSITIONDELAY) {\n        item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = animateDelay * (i - number) / 1000 + 's';\n      }\n      removeClass(item, classOut);\n      addClass(item, classIn);\n\n      if (isOut) { slideItemsOut.push(item); }\n    }\n  }\n\n  // make transfer after click/drag:\n  // 1. change 'transform' property for mordern browsers\n  // 2. change 'left' property for legacy browsers\n  var transformCore = (function () {\n    return carousel ?\n      function () {\n        resetDuration(container, '');\n        if (TRANSITIONDURATION || !speed) {\n          // for morden browsers with non-zero duration or\n          // zero duration for all browsers\n          doContainerTransform();\n          // run fallback function manually\n          // when duration is 0 / container is hidden\n          if (!speed || !isVisible(container)) { onTransitionEnd(); }\n\n        } else {\n          // for old browser with non-zero duration\n          jsTransform(container, transformAttr, transformPrefix, transformPostfix, getContainerTransformValue(), speed, onTransitionEnd);\n        }\n\n        if (!horizontal) { updateContentWrapperHeight(); }\n      } :\n      function () {\n        slideItemsOut = [];\n\n        var eve = {};\n        eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;\n        removeEvents(slideItems[indexCached], eve);\n        addEvents(slideItems[index], eve);\n\n        animateSlide(indexCached, animateIn, animateOut, true);\n        animateSlide(index, animateNormal, animateIn);\n\n        // run fallback function manually\n        // when transition or animation not supported / duration is 0\n        if (!TRANSITIONEND || !ANIMATIONEND || !speed || !isVisible(container)) { onTransitionEnd(); }\n      };\n  })();\n\n  function render (e, sliderMoved) {\n    if (updateIndexBeforeTransform) { updateIndex(); }\n\n    // render when slider was moved (touch or drag) even though index may not change\n    if (index !== indexCached || sliderMoved) {\n      // events\n      events.emit('indexChanged', info());\n      events.emit('transitionStart', info());\n      if (autoHeight) { doAutoHeight(); }\n\n      // pause autoplay when click or keydown from user\n      if (animating && e && ['click', 'keydown'].indexOf(e.type) >= 0) { stopAutoplay(); }\n\n      running = true;\n      transformCore();\n    }\n  }\n\n  /*\n   * Transfer prefixed properties to the same format\n   * CSS: -Webkit-Transform => webkittransform\n   * JS: WebkitTransform => webkittransform\n   * @param {string} str - property\n   *\n   */\n  function strTrans (str) {\n    return str.toLowerCase().replace(/-/g, '');\n  }\n\n  // AFTER TRANSFORM\n  // Things need to be done after a transfer:\n  // 1. check index\n  // 2. add classes to visible slide\n  // 3. disable controls buttons when reach the first/last slide in non-loop slider\n  // 4. update nav status\n  // 5. lazyload images\n  // 6. update container height\n  function onTransitionEnd (event) {\n    // check running on gallery mode\n    // make sure trantionend/animationend events run only once\n    if (carousel || running) {\n      events.emit('transitionEnd', info(event));\n\n      if (!carousel && slideItemsOut.length > 0) {\n        for (var i = 0; i < slideItemsOut.length; i++) {\n          var item = slideItemsOut[i];\n          // set item positions\n          item.style.left = '';\n\n          if (ANIMATIONDELAY && TRANSITIONDELAY) {\n            item.style[ANIMATIONDELAY] = '';\n            item.style[TRANSITIONDELAY] = '';\n          }\n          removeClass(item, animateOut);\n          addClass(item, animateNormal);\n        }\n      }\n\n      /* update slides, nav, controls after checking ...\n       * => legacy browsers who don't support 'event'\n       *    have to check event first, otherwise event.target will cause an error\n       * => or 'gallery' mode:\n       *   + event target is slide item\n       * => or 'carousel' mode:\n       *   + event target is container,\n       *   + event.property is the same with transform attribute\n       */\n      if (!event ||\n          !carousel && event.target.parentNode === container ||\n          event.target === container && strTrans(event.propertyName) === strTrans(transformAttr)) {\n\n        if (!updateIndexBeforeTransform) {\n          var indexTem = index;\n          updateIndex();\n          if (index !== indexTem) {\n            events.emit('indexChanged', info());\n\n            doContainerTransformSilent();\n          }\n        }\n\n        if (nested === 'inner') { events.emit('innerLoaded', info()); }\n        running = false;\n        indexCached = index;\n      }\n    }\n\n  }\n\n  // # ACTIONS\n  function goTo (targetIndex, e) {\n    if (freeze) { return; }\n\n    // prev slideBy\n    if (targetIndex === 'prev') {\n      onControlsClick(e, -1);\n\n    // next slideBy\n    } else if (targetIndex === 'next') {\n      onControlsClick(e, 1);\n\n    // go to exact slide\n    } else {\n      if (running) {\n        if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n      }\n\n      var absIndex = getAbsIndex(),\n          indexGap = 0;\n\n      if (targetIndex === 'first') {\n        indexGap = - absIndex;\n      } else if (targetIndex === 'last') {\n        indexGap = carousel ? slideCount - items - absIndex : slideCount - 1 - absIndex;\n      } else {\n        if (typeof targetIndex !== 'number') { targetIndex = parseInt(targetIndex); }\n\n        if (!isNaN(targetIndex)) {\n          // from directly called goTo function\n          if (!e) { targetIndex = Math.max(0, Math.min(slideCount - 1, targetIndex)); }\n\n          indexGap = targetIndex - absIndex;\n        }\n      }\n\n      // gallery: make sure new page won't overlap with current page\n      if (!carousel && indexGap && Math.abs(indexGap) < items) {\n        var factor = indexGap > 0 ? 1 : -1;\n        indexGap += (index + indexGap - slideCount) >= indexMin ? slideCount * factor : slideCount * 2 * factor * -1;\n      }\n\n      index += indexGap;\n\n      // make sure index is in range\n      if (carousel && loop) {\n        if (index < indexMin) { index += slideCount; }\n        if (index > indexMax) { index -= slideCount; }\n      }\n\n      // if index is changed, start rendering\n      if (getAbsIndex(index) !== getAbsIndex(indexCached)) {\n        render(e);\n      }\n\n    }\n  }\n\n  // on controls click\n  function onControlsClick (e, dir) {\n    if (running) {\n      if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n    }\n    var passEventObject;\n\n    if (!dir) {\n      e = getEvent(e);\n      var target = getTarget(e);\n\n      while (target !== controlsContainer && [prevButton, nextButton].indexOf(target) < 0) { target = target.parentNode; }\n\n      var targetIn = [prevButton, nextButton].indexOf(target);\n      if (targetIn >= 0) {\n        passEventObject = true;\n        dir = targetIn === 0 ? -1 : 1;\n      }\n    }\n\n    if (rewind) {\n      if (index === indexMin && dir === -1) {\n        goTo('last', e);\n        return;\n      } else if (index === indexMax && dir === 1) {\n        goTo('first', e);\n        return;\n      }\n    }\n\n    if (dir) {\n      index += slideBy * dir;\n      if (autoWidth) { index = Math.floor(index); }\n      // pass e when click control buttons or keydown\n      render((passEventObject || (e && e.type === 'keydown')) ? e : null);\n    }\n  }\n\n  // on nav click\n  function onNavClick (e) {\n    if (running) {\n      if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n    }\n\n    e = getEvent(e);\n    var target = getTarget(e), navIndex;\n\n    // find the clicked nav item\n    while (target !== navContainer && !hasAttr(target, 'data-nav')) { target = target.parentNode; }\n    if (hasAttr(target, 'data-nav')) {\n      var navIndex = navClicked = Number(getAttr(target, 'data-nav')),\n          targetIndexBase = fixedWidth || autoWidth ? navIndex * slideCount / pages : navIndex * items,\n          targetIndex = navAsThumbnails ? navIndex : Math.min(Math.ceil(targetIndexBase), slideCount - 1);\n      goTo(targetIndex, e);\n\n      if (navCurrentIndex === navIndex) {\n        if (animating) { stopAutoplay(); }\n        navClicked = -1; // reset navClicked\n      }\n    }\n  }\n\n  // autoplay functions\n  function setAutoplayTimer () {\n    autoplayTimer = setInterval(function () {\n      onControlsClick(null, autoplayDirection);\n    }, autoplayTimeout);\n\n    animating = true;\n  }\n\n  function stopAutoplayTimer () {\n    clearInterval(autoplayTimer);\n    animating = false;\n  }\n\n  function updateAutoplayButton (action, txt) {\n    setAttrs(autoplayButton, {'data-action': action});\n    autoplayButton.innerHTML = autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;\n  }\n\n  function startAutoplay () {\n    setAutoplayTimer();\n    if (autoplayButton) { updateAutoplayButton('stop', autoplayText[1]); }\n  }\n\n  function stopAutoplay () {\n    stopAutoplayTimer();\n    if (autoplayButton) { updateAutoplayButton('start', autoplayText[0]); }\n  }\n\n  // programaitcally play/pause the slider\n  function play () {\n    if (autoplay && !animating) {\n      startAutoplay();\n      autoplayUserPaused = false;\n    }\n  }\n  function pause () {\n    if (animating) {\n      stopAutoplay();\n      autoplayUserPaused = true;\n    }\n  }\n\n  function toggleAutoplay () {\n    if (animating) {\n      stopAutoplay();\n      autoplayUserPaused = true;\n    } else {\n      startAutoplay();\n      autoplayUserPaused = false;\n    }\n  }\n\n  function onVisibilityChange () {\n    if (doc.hidden) {\n      if (animating) {\n        stopAutoplayTimer();\n        autoplayVisibilityPaused = true;\n      }\n    } else if (autoplayVisibilityPaused) {\n      setAutoplayTimer();\n      autoplayVisibilityPaused = false;\n    }\n  }\n\n  function mouseoverPause () {\n    if (animating) {\n      stopAutoplayTimer();\n      autoplayHoverPaused = true;\n    }\n  }\n\n  function mouseoutRestart () {\n    if (autoplayHoverPaused) {\n      setAutoplayTimer();\n      autoplayHoverPaused = false;\n    }\n  }\n\n  // keydown events on document\n  function onDocumentKeydown (e) {\n    e = getEvent(e);\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n    if (keyIndex >= 0) {\n      onControlsClick(e, keyIndex === 0 ? -1 : 1);\n    }\n  }\n\n  // on key control\n  function onControlsKeydown (e) {\n    e = getEvent(e);\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n    if (keyIndex >= 0) {\n      if (keyIndex === 0) {\n        if (!prevButton.disabled) { onControlsClick(e, -1); }\n      } else if (!nextButton.disabled) {\n        onControlsClick(e, 1);\n      }\n    }\n  }\n\n  // set focus\n  function setFocus (el) {\n    el.focus();\n  }\n\n  // on key nav\n  function onNavKeydown (e) {\n    e = getEvent(e);\n    var curElement = doc.activeElement;\n    if (!hasAttr(curElement, 'data-nav')) { return; }\n\n    // var code = e.keyCode,\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT, KEYS.ENTER, KEYS.SPACE].indexOf(e.keyCode),\n        navIndex = Number(getAttr(curElement, 'data-nav'));\n\n    if (keyIndex >= 0) {\n      if (keyIndex === 0) {\n        if (navIndex > 0) { setFocus(navItems[navIndex - 1]); }\n      } else if (keyIndex === 1) {\n        if (navIndex < pages - 1) { setFocus(navItems[navIndex + 1]); }\n      } else {\n        navClicked = navIndex;\n        goTo(navIndex, e);\n      }\n    }\n  }\n\n  function getEvent (e) {\n    e = e || win.event;\n    return isTouchEvent(e) ? e.changedTouches[0] : e;\n  }\n  function getTarget (e) {\n    return e.target || win.event.srcElement;\n  }\n\n  function isTouchEvent (e) {\n    return e.type.indexOf('touch') >= 0;\n  }\n\n  function preventDefaultBehavior (e) {\n    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n  }\n\n  function getMoveDirectionExpected () {\n    return getTouchDirection(toDegree(lastPosition.y - initPosition.y, lastPosition.x - initPosition.x), swipeAngle) === options.axis;\n  }\n\n  function onPanStart (e) {\n    if (running) {\n      if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n    }\n\n    if (autoplay && animating) { stopAutoplayTimer(); }\n\n    panStart = true;\n    if (rafIndex) {\n      caf(rafIndex);\n      rafIndex = null;\n    }\n\n    var $ = getEvent(e);\n    events.emit(isTouchEvent(e) ? 'touchStart' : 'dragStart', info(e));\n\n    if (!isTouchEvent(e) && ['img', 'a'].indexOf(getLowerCaseNodeName(getTarget(e))) >= 0) {\n      preventDefaultBehavior(e);\n    }\n\n    lastPosition.x = initPosition.x = $.clientX;\n    lastPosition.y = initPosition.y = $.clientY;\n    if (carousel) {\n      translateInit = parseFloat(container.style[transformAttr].replace(transformPrefix, ''));\n      resetDuration(container, '0s');\n    }\n  }\n\n  function onPanMove (e) {\n    if (panStart) {\n      var $ = getEvent(e);\n      lastPosition.x = $.clientX;\n      lastPosition.y = $.clientY;\n\n      if (carousel) {\n        if (!rafIndex) { rafIndex = raf(function(){ panUpdate(e); }); }\n      } else {\n        if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }\n        if (moveDirectionExpected) { preventScroll = true; }\n      }\n\n      if ((typeof e.cancelable !== 'boolean' || e.cancelable) && preventScroll) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  function panUpdate (e) {\n    if (!moveDirectionExpected) {\n      panStart = false;\n      return;\n    }\n    caf(rafIndex);\n    if (panStart) { rafIndex = raf(function(){ panUpdate(e); }); }\n\n    if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }\n    if (moveDirectionExpected) {\n      if (!preventScroll && isTouchEvent(e)) { preventScroll = true; }\n\n      try {\n        if (e.type) { events.emit(isTouchEvent(e) ? 'touchMove' : 'dragMove', info(e)); }\n      } catch(err) {}\n\n      var x = translateInit,\n          dist = getDist(lastPosition, initPosition);\n      if (!horizontal || fixedWidth || autoWidth) {\n        x += dist;\n        x += 'px';\n      } else {\n        var percentageX = TRANSFORM ? dist * items * 100 / ((viewport + gutter) * slideCountNew): dist * 100 / (viewport + gutter);\n        x += percentageX;\n        x += '%';\n      }\n\n      container.style[transformAttr] = transformPrefix + x + transformPostfix;\n    }\n  }\n\n  function onPanEnd (e) {\n    if (panStart) {\n      if (rafIndex) {\n        caf(rafIndex);\n        rafIndex = null;\n      }\n      if (carousel) { resetDuration(container, ''); }\n      panStart = false;\n\n      var $ = getEvent(e);\n      lastPosition.x = $.clientX;\n      lastPosition.y = $.clientY;\n      var dist = getDist(lastPosition, initPosition);\n\n      if (Math.abs(dist)) {\n        // drag vs click\n        if (!isTouchEvent(e)) {\n          // prevent \"click\"\n          var target = getTarget(e);\n          addEvents(target, {'click': function preventClick (e) {\n            preventDefaultBehavior(e);\n            removeEvents(target, {'click': preventClick});\n          }});\n        }\n\n        if (carousel) {\n          rafIndex = raf(function() {\n            if (horizontal && !autoWidth) {\n              var indexMoved = - dist * items / (viewport + gutter);\n              indexMoved = dist > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);\n              index += indexMoved;\n            } else {\n              var moved = - (translateInit + dist);\n              if (moved <= 0) {\n                index = indexMin;\n              } else if (moved >= slidePositions[slideCountNew - 1]) {\n                index = indexMax;\n              } else {\n                var i = 0;\n                while (i < slideCountNew && moved >= slidePositions[i]) {\n                  index = i;\n                  if (moved > slidePositions[i] && dist < 0) { index += 1; }\n                  i++;\n                }\n              }\n            }\n\n            render(e, dist);\n            events.emit(isTouchEvent(e) ? 'touchEnd' : 'dragEnd', info(e));\n          });\n        } else {\n          if (moveDirectionExpected) {\n            onControlsClick(e, dist > 0 ? -1 : 1);\n          }\n        }\n      }\n    }\n\n    // reset\n    if (options.preventScrollOnTouch === 'auto') { preventScroll = false; }\n    if (swipeAngle) { moveDirectionExpected = '?'; }\n    if (autoplay && !animating) { setAutoplayTimer(); }\n  }\n\n  // === RESIZE FUNCTIONS === //\n  // (slidePositions, index, items) => vertical_conentWrapper.height\n  function updateContentWrapperHeight () {\n    var wp = middleWrapper ? middleWrapper : innerWrapper;\n    wp.style.height = slidePositions[index + items] - slidePositions[index] + 'px';\n  }\n\n  function getPages () {\n    var rough = fixedWidth ? (fixedWidth + gutter) * slideCount / viewport : slideCount / items;\n    return Math.min(Math.ceil(rough), slideCount);\n  }\n\n  /*\n   * 1. update visible nav items list\n   * 2. add \"hidden\" attributes to previous visible nav items\n   * 3. remove \"hidden\" attrubutes to new visible nav items\n   */\n  function updateNavVisibility () {\n    if (!nav || navAsThumbnails) { return; }\n\n    if (pages !== pagesCached) {\n      var min = pagesCached,\n          max = pages,\n          fn = showElement;\n\n      if (pagesCached > pages) {\n        min = pages;\n        max = pagesCached;\n        fn = hideElement;\n      }\n\n      while (min < max) {\n        fn(navItems[min]);\n        min++;\n      }\n\n      // cache pages\n      pagesCached = pages;\n    }\n  }\n\n  function info (e) {\n    return {\n      container: container,\n      slideItems: slideItems,\n      navContainer: navContainer,\n      navItems: navItems,\n      controlsContainer: controlsContainer,\n      hasControls: hasControls,\n      prevButton: prevButton,\n      nextButton: nextButton,\n      items: items,\n      slideBy: slideBy,\n      cloneCount: cloneCount,\n      slideCount: slideCount,\n      slideCountNew: slideCountNew,\n      index: index,\n      indexCached: indexCached,\n      displayIndex: getCurrentSlide(),\n      navCurrentIndex: navCurrentIndex,\n      navCurrentIndexCached: navCurrentIndexCached,\n      pages: pages,\n      pagesCached: pagesCached,\n      sheet: sheet,\n      isOn: isOn,\n      event: e || {},\n    };\n  }\n\n  return {\n    version: '2.9.2',\n    getInfo: info,\n    events: events,\n    goTo: goTo,\n    play: play,\n    pause: pause,\n    isOn: isOn,\n    updateSliderHeight: updateInnerWrapperHeight,\n    refresh: initSliderTransform,\n    destroy: destroy,\n    rebuild: function() {\n      return tns(extend(options, optionsElements));\n    }\n  };\n};\n\nreturn tns;\n})();","\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    adjustTestimonialsHeight();\r\n    window.addEventListener('resize', adjustTestimonialsHeight);\r\n    \r\n  });\r\n\r\n  function adjustTestimonialsHeight(){\r\n    var testimonials = document.querySelectorAll('.testimonial-col')\r\n    var maxHeight = 0;\r\n    testimonials.forEach(function(e,i){\r\n        var currentHeight = e.querySelector('.testimonial-content').clientHeight;\r\n        if( currentHeight > maxHeight )\r\n            maxHeight = currentHeight\r\n    })\r\n    \r\n    testimonials.forEach(function(e,i) {\r\n        e.style.height = maxHeight + 45 + 'px';\r\n    })\r\n  }\r\n \r\nvar slider = tns({\r\n    \"container\": '#testimonials-slider',\r\n    \"items\": 3,\r\n    \"slideBy\": 1,\r\n    \"controls\": false,\r\n    \"gutter\": 30,\r\n    \"navPosition\": \"bottom\",\r\n    \"responsive\": {\r\n        \"0\": {\r\n          \"items\": 1,\r\n          \"edgePadding\": 20,\r\n          \"gutter\": 30,\r\n        },\r\n        \"670\": {\r\n\r\n            \"items\": 2,\r\n            \"edgePadding\": 0,\r\n          },\r\n        \"980\": {\r\n        \"edgePadding\": 0,\r\n            nav:false,\r\n          \"items\": 3,\r\n          \"fixedWidth\": 540,\r\n          \"center\" :true,\r\n        }\r\n      },\r\n    \"mouseDrag\": true,\r\n    \"lazyload\": true,\r\n    \"arrowKeys\": true,\r\n  });\r\n\r\n  var menuToggle = document.getElementById('nav-toggle');\r\n  \r\n    menuToggle.addEventListener(\"click\", function(){\r\n        var nav = document.getElementById('nav-container');\r\n        var navContent = nav.querySelector('.nav-content');\r\n        if(!nav.classList.contains('active')){\r\n            nav.classList.add('opening');\r\n            nav.style.height = navContent.clientHeight+ 40 + 'px';\r\n            setTimeout(function(){\r\n                nav.classList.remove('opening');\r\n                nav.classList.add('active');\r\n            }, 700)\r\n        }else{\r\n            nav.style.height = '0px';\r\n            nav.classList.remove('active');\r\n        }\r\n    }); "]}